{"ast":null,"code":"// import axios from \"axios\";\n\n// // Function to get headers with Authorization and User ID\n// // Function to get headers with Authorization and User ID\n// const getHeader = () => {\n//   const token = localStorage.getItem(\"token\");\n//   console.log(token);\n\n// if (!token) {\n//     alert(\"Authentication token is missing. Please log in again.\");\n//     throw new Error(\"Token not found\");\n//   }\n\n//  return {\n//     \"Content-Type\": \"application/json\",\n//     Authorization: `Bearer ${token}`,\n\n//   };\n// };\n\n// // Register a new user\n// const submitRegistrationForm = async (registration) => {\n//   try {\n//     const response = await axios.post(\n//       `http://localhost:8080/auth/register`,\n//       registration\n//     );\n\n//     return response.data;\n//   } catch (error) {\n//     console.error(\n//       \"Error during registration:\",\n//       error.response?.data || error.message\n//     );\n//     throw new Error(\n//       error.response?.data?.message || \"An error occurred during registration.\"\n//     );\n//   }\n// };\n\n// const loginUserForm = async (loginDetails) => {\n//   try {\n//     const response = await axios.post(\n//       `http://localhost:8080/auth/login`,\n//       loginDetails\n//     );\n//     console.log(\"ApiResponse: \", response);\n\n//     // Store the entire response in localStorage\n//     if (response.data) {\n//       localStorage.setItem(\"userData\", JSON.stringify(response.data));\n//     }\n\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error during login:\", error.response?.data || error.message);\n//     throw new Error(\n//       error.response?.data?.message || \"An error occurred during login.\"\n//     );\n//   }\n// };\n\n// // Submit physical attributes with userId\n// // const submitBasicDetails = async (formData) => {\n// //   try {\n// //     const response = await axios.post(\n// //       `http://localhost:8080/api/basic-information`,\n// //       formData);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.error(\"Error submitting Basic Details:\", error);\n// //     throw new Error(\"Error submitting Basic Details: \");\n// //   }\n// // };\n// // // Function to get all users\n// // const getBasicDetails = async () => {\n// //   console.log(\"log 1 \");\n\n// //   try {\n// //     const response = await axios.get(\n// //       `http://localhost:8080/api/basic-information`,\n// //       {\n// //         headers: getHeader(), // Include the header with Authorization\n// //       }\n// //     );\n// //     console.log(\"basic Details page response : \", response);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.error(\"Error fetching all Basic Details:\", error);\n// //     throw error; // Rethrow the error to handle it in the calling function\n// //   }\n// // };\n// // const updateBasicDetails = async (id, updatedData) => {\n// //   console.log(`Updating basic details for ID: ${id}`);\n\n// //   try {\n// //     const response = await axios.put(\n// //       `http://localhost:8080/api/basic-information/${id}`,  // API endpoint with `id`\n// //       updatedData,  // The data to update the resource\n// //       {\n// //         headers: getHeader(), // Include the header with Authorization\n// //       }\n// //     );\n// //     console.log(\"Update response: \", response);\n// //     return response.data; // Return updated data or response\n// //   } catch (error) {\n// //     console.error(\"Error updating basic details:\", error.message);\n// //     // Log error details\n// //     if (error.response) {\n// //       // Server responded with a status other than 2xx\n// //       console.error(\"Server responded with error:\", error.response.data);\n// //     } else if (error.request) {\n// //       // No response was received from the server\n// //       console.error(\"No response received:\", error.request);\n// //     } else {\n// //       // Other errors\n// //       console.error(\"Unexpected error:\", error.message);\n// //     }\n\n// //     throw error; // Rethrow the error for the calling function to handle\n// //   }\n// // };\n\n// // Function to submit basic details (POST request)\n// const submitBasicDetails = async (formData) => {\n//   try {\n//     const response = await axios.post(\n//       `http://localhost:8080/api/basic-information`,\n//       formData\n//     );\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error submitting Basic Details:\", error);\n//     throw new Error(\"Error submitting Basic Details.\");\n//   }\n// };\n\n// // Function to get all basic details (GET request)\n// const getBasicDetails = async () => {\n//   console.log(\"Fetching all basic details\");\n\n//   try {\n//     const response = await axios.get(\n//       `http://localhost:8080/api/basic-information`,\n//       {\n//         headers: getHeader(), // Include the header with Authorization (if needed)\n//       }\n//     );\n//     console.log(\"Basic Details response:\", response);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching all Basic Details:\", error);\n//     throw error;\n//   }\n// };\n\n// // Function to get basic details by ID (GET request)\n// const getBasicDetailsById = async (id) => {\n//   console.log(`Fetching basic details for ID: ${id}`);\n\n//   try {\n//     const response = await axios.get(\n//       `http://localhost:8080/api/basic-information/${id}`,\n//       {\n//         headers: getHeader(), // Include the header with Authorization (if needed)\n//       }\n//     );\n//     console.log(\"Fetched basic details by ID:\", response);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching basic details by ID:\", error);\n//     throw error;\n//   }\n// };\n\n// // Function to update basic details (PUT request)\n// const updateBasicDetails = async (id, updatedData) => {\n//   console.log(`Updating basic details for ID: ${id}`);\n\n//   try {\n//     const response = await axios.put(\n//       `http://localhost:8080/api/basic-information/${id}`, // API endpoint with `id`\n//       updatedData, // The data to update the resource\n//       {\n//         headers: getHeader(), // Include the header with Authorization (if needed)\n//       }\n//     );\n//     console.log(\"Update response:\", response);\n//     return response.data; // Return updated data or response\n//   } catch (error) {\n//     console.error(\"Error updating basic details:\", error.message);\n//     // Log error details\n//     if (error.response) {\n//       // Server responded with a status other than 2xx\n//       console.error(\"Server responded with error:\", error.response.data);\n//     } else if (error.request) {\n//       // No response was received from the server\n//       console.error(\"No response received:\", error.request);\n//     } else {\n//       // Other errors\n//       console.error(\"Unexpected error:\", error.message);\n//     }\n\n//     throw error; // Rethrow the error for the calling function to handle\n//   }\n// };\n\n// // Submit physical attributes with userId\n// const submitPhysicalAttributes = async (formData) => {\n//   try {\n//     const response = await axios.post(\n//       `http://localhost:8080/api/physical-attributes`,\n//       formData);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error submitting physical attributes:\", error);\n//     throw new Error(\"Error submitting physical attributes\");\n//   }\n// };\n\n// // Submit Family Information with userId\n// const submitFamilyInformation = async (formData) => {\n//   try {\n//     const response = await axios.post(\n//       `http://localhost:8080/api/family-attributes`,\n//       formData\n//       //   {\n//       //     headers: getHeader(), // Include the header with Authorization\n//       //   }\n//     );\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error submitting Family Information:\", error);\n//     throw new Error(\"Error submitting Family Information\");\n//   }\n// };\n\n// const submitPartnerExpectations = async (formData) => {\n//   try {\n//     const response = await axios.post(\n//       `http://localhost:8080/api/partner-expectations`,\n//       formData\n//       //   {\n//       //     headers: getHeader(), // Include the header with Authorization\n//       //   }\n//     );\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error submitting Partner Expectations:\", error);\n//     throw new Error(\"Error submitting Partner Expectations\");\n//   }\n// };\n\n// const careerInformationForm = async (formData) => {\n//   try {\n//     const response = await axios.post(\n//       `http://localhost:8080/api/career`,\n//       formData\n//       //   {\n//       //     headers: getHeader(), // Include the header with Authorization\n//       //   }\n//     );\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error submitting Career Information :\", error);\n//     throw new Error(\"Error submitting Career Information Form\");\n//   }\n// };\n\n// // Function to fetch career data\n//  const fetchCareerData = async () => {\n//   try {\n//     const response = await axios.get(`http://localhost:8080/api/career`);\n//     return response;\n//   } catch (error) {\n//     console.error(\"Error fetching career data:\", error);\n//     throw error;\n//   }\n// };\n// // Function to fetch career data\n// const fetchEducationData = async () => {\n//   try {\n//     const response = await axios.get(`http://localhost:8080/api/education`);\n//     return response;\n//   } catch (error) {\n//     console.error(\"Error fetching career data:\", error);\n//     throw error;\n//   }\n// };\n\n// const educationInformationForm = async (formData) => {\n//   try {\n//     const response = await axios.post(\n//       `http://localhost:8080/api/education`,\n//       formData\n//       //   {\n//       //     headers: getHeader(), // Include the header with Authorization\n//       //   }\n//     );\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error submitting Education Information :\", error);\n//     throw new Error(\"Error submitting Education Information Form\");\n//   }\n// };\n\n// // Function to get all users\n// const getAllUsers = async () => {\n//   console.log(\"log 1 \");\n\n//   try {\n//     const response = await axios.get(\n//       `http://localhost:8080/users/get-all`,\n//       {\n//         headers: getHeader(), // Include the header with Authorization\n//       }\n//     );\n//     console.log(\"member page response : \", response);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching all users:\", error);\n//     throw error; // Rethrow the error to handle it in the calling function\n//   }\n// };\n\n// export  {\n//   submitRegistrationForm,\n//   loginUserForm,\n//   submitBasicDetails,\n//   getBasicDetails,\n//   getBasicDetailsById,\n//    updateBasicDetails,\n//   submitPhysicalAttributes,\n//   submitFamilyInformation,\n//   submitPartnerExpectations,\n//   careerInformationForm,\n//   fetchCareerData,\n//   fetchEducationData,\n//   educationInformationForm,\n//   getAllUsers,\n\n//   getHeader,\n\n// };\n\n// ..........................////  change code from component to class code ............/////////////////..............//////////////////\n\nimport axios from \"axios\";\nclass MyApiService {\n  // Function to get headers with Authorization\n  static getHeader() {\n    const token = localStorage.getItem(\"token\");\n    console.log(\"Token:\", token);\n    if (!token) {\n      alert(\"Authentication token is missing. Please log in again.\");\n      throw new Error(\"Token not found\");\n    }\n    return {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    };\n  }\n\n  /** AUTH **/\n\n  // Register a new user\n  static async submitRegistrationForm(registration) {\n    try {\n      const response = await axios.post(`${this.BASE_URL}/auth/register`, registration\n      // { headers: this.getHeader() }\n      );\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error(\"Error during registration:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"An error occurred during registration.\");\n    }\n  }\n\n  // Login a user\n  static async loginUserForm(loginDetails) {\n    try {\n      const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails\n      // { headers: this.getHeader() }\n      );\n      localStorage.setItem(\"userData\", JSON.stringify(response.data));\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error(\"Error during login:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"An error occurred during login.\");\n    }\n  }\n\n  /** BASIC DETAILS **/\n\n  // static async submitBasicDetails(formData) {\n  //   try {\n  //     const response = await axios.post(\n  //       `${this.BASE_URL}/api/basic-information`,\n  //       formData,\n  //       //  { headers: this.getHeader() }\n  //     );\n\n  //     console.log(\"basic data response received\", response);\n\n  //     return response.data;\n  //   } catch (error) {\n  //     console.error(\"Error submitting Basic Details:\", error);\n  //     throw new Error(\"Error submitting Basic Details.\");\n  //   }\n  // }\n\n  // static async getBasicDetails() {\n  //   try {\n  //     const response = await axios.get(\n  //       `${this.BASE_URL}/api/basic-information`,\n  //       { headers: this.getHeader() }\n  //     );\n  //     return response.data;\n  //   } catch (error) {\n  //     console.error(\"Error fetching all Basic Details:\", error);\n  //     throw error;\n  //   }\n  // }\n\n  // static async getBasicDetailsById(id) {\n  //   try {\n  //     const response = await axios.get(\n  //       `${this.BASE_URL}/api/basic-information/${id}`,\n  //       { headers: this.getHeader() }\n  //     );\n  //     return response.data;\n  //   } catch (error) {\n  //     console.error(\"Error fetching basic details by ID:\", error);\n  //     throw error;\n  //   }\n  // }\n\n  static async updateBasicDetails(id, updatedData) {\n    try {\n      const response = await axios.put(`${this.BASE_URL}/api/basic-information/${id}`, updatedData\n      // { headers: this.getHeader() }\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error updating basic details:\", error);\n      throw error;\n    }\n  }\n\n  /** PHYSICAL ATTRIBUTES **/\n\n  static async submitPhysicalAttributes(formData) {\n    try {\n      const response = await axios.post(`${this.BASE_URL}/api/physical-attributes`, formData, {\n        headers: this.getHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error submitting physical attributes:\", error);\n      throw new Error(\"Error submitting physical attributes\");\n    }\n  }\n\n  /** FAMILY INFORMATION **/\n\n  static async submitFamilyInformation(formData) {\n    try {\n      const response = await axios.post(`${this.BASE_URL}/api/family-attributes`, formData, {\n        headers: this.getHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error submitting Family Information:\", error);\n      throw new Error(\"Error submitting Family Information\");\n    }\n  }\n\n  /** PARTNER EXPECTATIONS **/\n\n  static async submitPartnerExpectations(formData) {\n    try {\n      const response = await axios.post(`${this.BASE_URL}/api/partner-expectations`, formData\n      // { headers: this.getHeader() }\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error submitting Partner Expectations:\", error);\n      throw new Error(\"Error submitting Partner Expectations\");\n    }\n  }\n\n  /** CAREER INFORMATION **/\n\n  static async careerInformationForm(formData) {\n    try {\n      const response = await axios.post(`${this.BASE_URL}/api/career`, formData, {\n        headers: this.getHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error submitting Career Information:\", error);\n      throw new Error(\"Error submitting Career Information Form\");\n    }\n  }\n  static async fetchCareerData() {\n    try {\n      const response = await axios.get(`${this.BASE_URL}/api/career`, {\n        headers: this.getHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching career data:\", error);\n      throw error;\n    }\n  }\n\n  /** EDUCATION INFORMATION **/\n\n  static async educationInformationForm(formData) {\n    try {\n      const response = await axios.post(`${this.BASE_URL}/api/education`, formData\n      //  { headers: this.getHeader() }\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error submitting Education Information:\", error);\n      throw new Error(\"Error submitting Education Information Form\");\n    }\n  }\n  static async fetchEducationData() {\n    try {\n      const response = await axios.get(`${this.BASE_URL}/api/education`, {\n        // headers: this.getHeader(),\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching education data:\", error);\n      throw error;\n    }\n  }\n\n  /** USERS **/\n\n  static async getAllUsers() {\n    try {\n      const response = await axios.get(`${this.BASE_URL}/users/get-all`, {\n        headers: this.getHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching all users:\", error);\n      throw error;\n    }\n  }\n}\nMyApiService.BASE_URL = \"http://localhost:8080\";\nexport default MyApiService;","map":{"version":3,"names":["axios","MyApiService","getHeader","token","localStorage","getItem","console","log","alert","Error","Authorization","submitRegistrationForm","registration","response","post","BASE_URL","data","error","_error$response","_error$response2","_error$response2$data","message","loginUserForm","loginDetails","setItem","JSON","stringify","_error$response3","_error$response4","_error$response4$data","updateBasicDetails","id","updatedData","put","submitPhysicalAttributes","formData","headers","submitFamilyInformation","submitPartnerExpectations","careerInformationForm","fetchCareerData","get","educationInformationForm","fetchEducationData","getAllUsers"],"sources":["E:/MatriLab-frontend/src/services/MyApiService.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// // Function to get headers with Authorization and User ID\r\n// // Function to get headers with Authorization and User ID\r\n// const getHeader = () => {\r\n//   const token = localStorage.getItem(\"token\");\r\n//   console.log(token);\r\n\r\n// if (!token) {\r\n//     alert(\"Authentication token is missing. Please log in again.\");\r\n//     throw new Error(\"Token not found\");\r\n//   }\r\n\r\n//  return {\r\n//     \"Content-Type\": \"application/json\",\r\n//     Authorization: `Bearer ${token}`,\r\n    \r\n//   };\r\n// };\r\n\r\n// // Register a new user\r\n// const submitRegistrationForm = async (registration) => {\r\n//   try {\r\n//     const response = await axios.post(\r\n//       `http://localhost:8080/auth/register`,\r\n//       registration\r\n//     );\r\n\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\r\n//       \"Error during registration:\",\r\n//       error.response?.data || error.message\r\n//     );\r\n//     throw new Error(\r\n//       error.response?.data?.message || \"An error occurred during registration.\"\r\n//     );\r\n//   }\r\n// };\r\n\r\n// const loginUserForm = async (loginDetails) => {\r\n//   try {\r\n//     const response = await axios.post(\r\n//       `http://localhost:8080/auth/login`,\r\n//       loginDetails\r\n//     );\r\n//     console.log(\"ApiResponse: \", response);\r\n\r\n//     // Store the entire response in localStorage\r\n//     if (response.data) {\r\n//       localStorage.setItem(\"userData\", JSON.stringify(response.data));\r\n//     }\r\n\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error during login:\", error.response?.data || error.message);\r\n//     throw new Error(\r\n//       error.response?.data?.message || \"An error occurred during login.\"\r\n//     );\r\n//   }\r\n// };\r\n\r\n// // Submit physical attributes with userId\r\n// // const submitBasicDetails = async (formData) => {\r\n// //   try {\r\n// //     const response = await axios.post(\r\n// //       `http://localhost:8080/api/basic-information`,\r\n// //       formData);\r\n// //     return response.data;\r\n// //   } catch (error) {\r\n// //     console.error(\"Error submitting Basic Details:\", error);\r\n// //     throw new Error(\"Error submitting Basic Details: \");\r\n// //   }\r\n// // };\r\n// // // Function to get all users\r\n// // const getBasicDetails = async () => {\r\n// //   console.log(\"log 1 \");\r\n\r\n// //   try {\r\n// //     const response = await axios.get(\r\n// //       `http://localhost:8080/api/basic-information`,\r\n// //       {\r\n// //         headers: getHeader(), // Include the header with Authorization\r\n// //       }\r\n// //     );\r\n// //     console.log(\"basic Details page response : \", response);\r\n// //     return response.data;\r\n// //   } catch (error) {\r\n// //     console.error(\"Error fetching all Basic Details:\", error);\r\n// //     throw error; // Rethrow the error to handle it in the calling function\r\n// //   }\r\n// // };\r\n// // const updateBasicDetails = async (id, updatedData) => {\r\n// //   console.log(`Updating basic details for ID: ${id}`);\r\n\r\n// //   try {\r\n// //     const response = await axios.put(\r\n// //       `http://localhost:8080/api/basic-information/${id}`,  // API endpoint with `id`\r\n// //       updatedData,  // The data to update the resource\r\n// //       {\r\n// //         headers: getHeader(), // Include the header with Authorization\r\n// //       }\r\n// //     );\r\n// //     console.log(\"Update response: \", response);\r\n// //     return response.data; // Return updated data or response\r\n// //   } catch (error) {\r\n// //     console.error(\"Error updating basic details:\", error.message);\r\n// //     // Log error details\r\n// //     if (error.response) {\r\n// //       // Server responded with a status other than 2xx\r\n// //       console.error(\"Server responded with error:\", error.response.data);\r\n// //     } else if (error.request) {\r\n// //       // No response was received from the server\r\n// //       console.error(\"No response received:\", error.request);\r\n// //     } else {\r\n// //       // Other errors\r\n// //       console.error(\"Unexpected error:\", error.message);\r\n// //     }\r\n\r\n// //     throw error; // Rethrow the error for the calling function to handle\r\n// //   }\r\n// // };\r\n\r\n\r\n// // Function to submit basic details (POST request)\r\n// const submitBasicDetails = async (formData) => {\r\n//   try {\r\n//     const response = await axios.post(\r\n//       `http://localhost:8080/api/basic-information`,\r\n//       formData\r\n//     );\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error submitting Basic Details:\", error);\r\n//     throw new Error(\"Error submitting Basic Details.\");\r\n//   }\r\n// };\r\n\r\n// // Function to get all basic details (GET request)\r\n// const getBasicDetails = async () => {\r\n//   console.log(\"Fetching all basic details\");\r\n\r\n//   try {\r\n//     const response = await axios.get(\r\n//       `http://localhost:8080/api/basic-information`,\r\n//       {\r\n//         headers: getHeader(), // Include the header with Authorization (if needed)\r\n//       }\r\n//     );\r\n//     console.log(\"Basic Details response:\", response);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching all Basic Details:\", error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Function to get basic details by ID (GET request)\r\n// const getBasicDetailsById = async (id) => {\r\n//   console.log(`Fetching basic details for ID: ${id}`);\r\n\r\n//   try {\r\n//     const response = await axios.get(\r\n//       `http://localhost:8080/api/basic-information/${id}`,\r\n//       {\r\n//         headers: getHeader(), // Include the header with Authorization (if needed)\r\n//       }\r\n//     );\r\n//     console.log(\"Fetched basic details by ID:\", response);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching basic details by ID:\", error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Function to update basic details (PUT request)\r\n// const updateBasicDetails = async (id, updatedData) => {\r\n//   console.log(`Updating basic details for ID: ${id}`);\r\n\r\n//   try {\r\n//     const response = await axios.put(\r\n//       `http://localhost:8080/api/basic-information/${id}`, // API endpoint with `id`\r\n//       updatedData, // The data to update the resource\r\n//       {\r\n//         headers: getHeader(), // Include the header with Authorization (if needed)\r\n//       }\r\n//     );\r\n//     console.log(\"Update response:\", response);\r\n//     return response.data; // Return updated data or response\r\n//   } catch (error) {\r\n//     console.error(\"Error updating basic details:\", error.message);\r\n//     // Log error details\r\n//     if (error.response) {\r\n//       // Server responded with a status other than 2xx\r\n//       console.error(\"Server responded with error:\", error.response.data);\r\n//     } else if (error.request) {\r\n//       // No response was received from the server\r\n//       console.error(\"No response received:\", error.request);\r\n//     } else {\r\n//       // Other errors\r\n//       console.error(\"Unexpected error:\", error.message);\r\n//     }\r\n\r\n//     throw error; // Rethrow the error for the calling function to handle\r\n//   }\r\n// };\r\n\r\n// // Submit physical attributes with userId\r\n// const submitPhysicalAttributes = async (formData) => {\r\n//   try {\r\n//     const response = await axios.post(\r\n//       `http://localhost:8080/api/physical-attributes`,\r\n//       formData);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error submitting physical attributes:\", error);\r\n//     throw new Error(\"Error submitting physical attributes\");\r\n//   }\r\n// };\r\n\r\n// // Submit Family Information with userId\r\n// const submitFamilyInformation = async (formData) => {\r\n//   try {\r\n//     const response = await axios.post(\r\n//       `http://localhost:8080/api/family-attributes`,\r\n//       formData\r\n//       //   {\r\n//       //     headers: getHeader(), // Include the header with Authorization\r\n//       //   }\r\n//     );\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error submitting Family Information:\", error);\r\n//     throw new Error(\"Error submitting Family Information\");\r\n//   }\r\n// };\r\n\r\n// const submitPartnerExpectations = async (formData) => {\r\n//   try {\r\n//     const response = await axios.post(\r\n//       `http://localhost:8080/api/partner-expectations`,\r\n//       formData\r\n//       //   {\r\n//       //     headers: getHeader(), // Include the header with Authorization\r\n//       //   }\r\n//     );\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error submitting Partner Expectations:\", error);\r\n//     throw new Error(\"Error submitting Partner Expectations\");\r\n//   }\r\n// };\r\n\r\n// const careerInformationForm = async (formData) => {\r\n//   try {\r\n//     const response = await axios.post(\r\n//       `http://localhost:8080/api/career`,\r\n//       formData\r\n//       //   {\r\n//       //     headers: getHeader(), // Include the header with Authorization\r\n//       //   }\r\n//     );\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error submitting Career Information :\", error);\r\n//     throw new Error(\"Error submitting Career Information Form\");\r\n//   }\r\n// };\r\n\r\n// // Function to fetch career data\r\n//  const fetchCareerData = async () => {\r\n//   try {\r\n//     const response = await axios.get(`http://localhost:8080/api/career`);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching career data:\", error);\r\n//     throw error;\r\n//   }\r\n// };\r\n// // Function to fetch career data\r\n// const fetchEducationData = async () => {\r\n//   try {\r\n//     const response = await axios.get(`http://localhost:8080/api/education`);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching career data:\", error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// const educationInformationForm = async (formData) => {\r\n//   try {\r\n//     const response = await axios.post(\r\n//       `http://localhost:8080/api/education`,\r\n//       formData\r\n//       //   {\r\n//       //     headers: getHeader(), // Include the header with Authorization\r\n//       //   }\r\n//     );\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error submitting Education Information :\", error);\r\n//     throw new Error(\"Error submitting Education Information Form\");\r\n//   }\r\n// };\r\n\r\n\r\n// // Function to get all users\r\n// const getAllUsers = async () => {\r\n//   console.log(\"log 1 \");\r\n\r\n//   try {\r\n//     const response = await axios.get(\r\n//       `http://localhost:8080/users/get-all`,\r\n//       {\r\n//         headers: getHeader(), // Include the header with Authorization\r\n//       }\r\n//     );\r\n//     console.log(\"member page response : \", response);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching all users:\", error);\r\n//     throw error; // Rethrow the error to handle it in the calling function\r\n//   }\r\n// };\r\n\r\n// export  {\r\n//   submitRegistrationForm,\r\n//   loginUserForm,\r\n//   submitBasicDetails,\r\n//   getBasicDetails,\r\n//   getBasicDetailsById,\r\n//    updateBasicDetails,\r\n//   submitPhysicalAttributes,\r\n//   submitFamilyInformation,\r\n//   submitPartnerExpectations,\r\n//   careerInformationForm,\r\n//   fetchCareerData,\r\n//   fetchEducationData,\r\n//   educationInformationForm,\r\n//   getAllUsers,\r\n  \r\n//   getHeader,\r\n  \r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ..........................////  change code from component to class code ............/////////////////..............//////////////////\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\nclass MyApiService {\r\n  static BASE_URL = \"http://localhost:8080\";\r\n\r\n  // Function to get headers with Authorization\r\n  static getHeader() {\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(\"Token:\", token);\r\n    if (!token) {\r\n      alert(\"Authentication token is missing. Please log in again.\");\r\n      throw new Error(\"Token not found\");\r\n    }\r\n\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n  }\r\n\r\n  /** AUTH **/\r\n\r\n  // Register a new user\r\n  static async submitRegistrationForm(registration) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${this.BASE_URL}/auth/register`,\r\n        registration,\r\n        // { headers: this.getHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error during registration:\", error.response?.data || error.message);\r\n      throw new Error(error.response?.data?.message || \"An error occurred during registration.\");\r\n    }\r\n  }\r\n\r\n  // Login a user\r\n  static async loginUserForm(loginDetails) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${this.BASE_URL}/auth/login`,\r\n        loginDetails,\r\n        // { headers: this.getHeader() }\r\n      );\r\n      localStorage.setItem(\"userData\", JSON.stringify(response.data));\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error during login:\", error.response?.data || error.message);\r\n      throw new Error(error.response?.data?.message || \"An error occurred during login.\");\r\n    }\r\n  }\r\n\r\n  /** BASIC DETAILS **/\r\n\r\n  // static async submitBasicDetails(formData) {\r\n  //   try {\r\n  //     const response = await axios.post(\r\n  //       `${this.BASE_URL}/api/basic-information`,\r\n  //       formData,\r\n  //       //  { headers: this.getHeader() }\r\n  //     );\r\n\r\n  //     console.log(\"basic data response received\", response);\r\n      \r\n  //     return response.data;\r\n  //   } catch (error) {\r\n  //     console.error(\"Error submitting Basic Details:\", error);\r\n  //     throw new Error(\"Error submitting Basic Details.\");\r\n  //   }\r\n  // }\r\n\r\n  // static async getBasicDetails() {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `${this.BASE_URL}/api/basic-information`,\r\n  //       { headers: this.getHeader() }\r\n  //     );\r\n  //     return response.data;\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching all Basic Details:\", error);\r\n  //     throw error;\r\n  //   }\r\n  // }\r\n\r\n  // static async getBasicDetailsById(id) {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `${this.BASE_URL}/api/basic-information/${id}`,\r\n  //       { headers: this.getHeader() }\r\n  //     );\r\n  //     return response.data;\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching basic details by ID:\", error);\r\n  //     throw error;\r\n  //   }\r\n  // }\r\n\r\n  static async updateBasicDetails(id, updatedData) {\r\n    try {\r\n      const response = await axios.put(\r\n        `${this.BASE_URL}/api/basic-information/${id}`,\r\n        updatedData,\r\n        // { headers: this.getHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error updating basic details:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /** PHYSICAL ATTRIBUTES **/\r\n\r\n  static async submitPhysicalAttributes(formData) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${this.BASE_URL}/api/physical-attributes`,\r\n        formData,\r\n         { headers: this.getHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error submitting physical attributes:\", error);\r\n      throw new Error(\"Error submitting physical attributes\");\r\n    }\r\n  }\r\n\r\n  /** FAMILY INFORMATION **/\r\n\r\n  static async submitFamilyInformation(formData) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${this.BASE_URL}/api/family-attributes`,\r\n        formData,\r\n        { headers: this.getHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error submitting Family Information:\", error);\r\n      throw new Error(\"Error submitting Family Information\");\r\n    }\r\n  }\r\n\r\n  /** PARTNER EXPECTATIONS **/\r\n\r\n  static async submitPartnerExpectations(formData) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${this.BASE_URL}/api/partner-expectations`,\r\n        formData,\r\n        // { headers: this.getHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error submitting Partner Expectations:\", error);\r\n      throw new Error(\"Error submitting Partner Expectations\");\r\n    }\r\n  }\r\n\r\n  /** CAREER INFORMATION **/\r\n\r\n  static async careerInformationForm(formData) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${this.BASE_URL}/api/career`,\r\n        formData,\r\n        { headers: this.getHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error submitting Career Information:\", error);\r\n      throw new Error(\"Error submitting Career Information Form\");\r\n    }\r\n  }\r\n\r\n  static async fetchCareerData() {\r\n    try {\r\n      const response = await axios.get(`${this.BASE_URL}/api/career`, {\r\n        headers: this.getHeader(),\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching career data:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /** EDUCATION INFORMATION **/\r\n\r\n  static async educationInformationForm(formData) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${this.BASE_URL}/api/education`,\r\n        formData,\r\n        //  { headers: this.getHeader() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error submitting Education Information:\", error);\r\n      throw new Error(\"Error submitting Education Information Form\");\r\n    }\r\n  }\r\n\r\n  static async fetchEducationData() {\r\n    try {\r\n      const response = await axios.get(`${this.BASE_URL}/api/education`, {\r\n        // headers: this.getHeader(),\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching education data:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /** USERS **/\r\n\r\n  static async getAllUsers() {\r\n    try {\r\n      const response = await axios.get(`${this.BASE_URL}/users/get-all`, {\r\n        headers: this.getHeader(),\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching all users:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MyApiService;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}