{"ast":null,"code":"var _jsxFileName = \"E:\\\\MatriLab-frontend\\\\src\\\\screens\\\\user\\\\BasicInformation.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import TalukaDivision from \"../../components/data/talukaDivisionData\";\n// import \"../../styles/user/dashboard.css\";\n// import \"../../styles/styles.css\";\n// import \"../../styles/user/profileSetting.css\";\n// import { useNavigate } from \"react-router-dom\";\n// import MyApiService from \"../../services/MyApiService\";\n\n// const BasicInformation = ({ id }) => {\n//   const [isSectionOpen, setIsSectionOpen] = useState(false);\n//   const [selectedDistrict, setSelectedDistrict] = useState(\"\");\n//   const [selectedDivision, setSelectedDivision] = useState(\"\");\n//   const [selectedTaluk, setSelectedTaluk] = useState(\"\");\n//   const [divisions, setDivisions] = useState([]);\n//   const [taluks, setTaluks] = useState([]);\n//   const [formData, setFormData] = useState({\n//     firstName: \"\",\n//     lastName: \"\",\n//     dob: \"\",\n//     religion: \"\",\n//     gender: \"\",\n//     maritalStatus: \"\",\n//     language: \"\",\n//     profession: \"\",\n//     bloodGroup: \"\",\n//     address: \"\",\n//     financialCondition: \"\",\n//     smokingHabits: \"\",\n//     drinkingStatus: \"\",\n//     district: \"\",\n//     division: \"\",\n//     taluk: \"\",\n//     zipCode: \"\",\n//   });\n\n//   const [userData, setUserData] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Retrieve the stored user data from localStorage\n//     const storedUserData = localStorage.getItem(\"userData\");\n//     console.log(\"user data\", storedUserData);\n\n//     if (storedUserData) {\n//       // Parse the stored data\n//       const parsedData = JSON.parse(storedUserData);\n\n//       // Make sure user data exists and set formData accordingly\n//       if (parsedData.user) {\n//         setUserData(parsedData);\n//         const { district, division, taluk } = parsedData.user;\n\n//         console.log(\"Smoking:\", parsedData.user.smokingHabits);\n//         console.log(\"Drinking:\", parsedData.user.drinkingStatus);\n\n//         // Prefill formData with values from userData\n//         setFormData((prevFormData) => ({\n//           ...prevFormData,\n//           firstName: parsedData.user.firstName || \"\",\n//           lastName: parsedData.user.lastName || \"\",\n//           dob: parsedData.user.dob || \"\",\n//           religion: parsedData.user.religion || \"\",\n//           gender: parsedData.user.gender || \"\",\n//           maritalStatus: parsedData.user.maritalStatus || \"\",\n//           language: parsedData.user.language || \"\",\n//           profession: parsedData.user.profession || \"\",\n//           bloodGroup: parsedData.user.bloodGroup || \"\",\n//           address: parsedData.user.presentAddress || \"\",\n//           financialCondition: parsedData.user.financialCondition || \"\",\n//           smokingHabits: parsedData.user.smokingHabits || \"N/A\",\n//           drinkingStatus: parsedData.user.drinkingStatus || \"N/A\",\n//           district: parsedData.user.district || \"\",\n//           division: parsedData.user.division || \"\",\n//           taluk: parsedData.user.taluk || \"\",\n//           zipCode: parsedData.user.zipCode || \"\",\n//         }));\n//         setSelectedDistrict(district || \"\");\n//         setDivisions(Object.keys(TalukaDivision[district] || {}));\n//         setSelectedDivision(division || \"\");\n//         setTaluks(TalukaDivision[district]?.[division] || []);\n//       }\n//     } else {\n//       // Redirect to login if no user data is found\n//       navigate(\"/matrilab/login\");\n//     }\n//   }, [navigate]);\n\n//   const toggleSection = () => {\n//     setIsSectionOpen(!isSectionOpen);\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleDistrictChange = (e) => {\n//     const district = e.target.value;\n//     setSelectedDistrict(district);\n//     setDivisions(Object.keys(TalukaDivision[district] || {}));\n//     setSelectedDivision(\"\");\n//     setTaluks([]);\n//     setFormData((prevFormData) => ({\n//       ...prevFormData,\n//       district,\n//       division: \"\",\n//       taluk: \"\",\n//     }));\n//   };\n\n//   const handleDivisionChange = (e) => {\n//     const division = e.target.value;\n//     setSelectedDivision(division);\n//     setTaluks(TalukaDivision[selectedDistrict][division] || []);\n//     setFormData((prevFormData) => ({\n//       ...prevFormData,\n//       division,\n//       taluk: \"\",\n//     }));\n//   };\n\n//   const handleTalukChange = (e) => {\n//     const taluk = e.target.value;\n//     setFormData((prevFormData) => ({\n//       ...prevFormData,\n//       taluk: taluk, // Add taluk to formData\n//     }));\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await MyApiService.submitBasicDetails(formData);\n//       console.log(\"Form submitted successfully:\", response);\n//       alert(\"Physical Attributes submitted successfully!\"); // Display success message\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//       alert(\"Failed to submit Physical Attributes.\"); // Display error message\n//     }\n//   };\n\n//   return (\n//     <div className=\"collapsible-section\">\n//       <div className=\"section-header\" onClick={toggleSection}>\n//         <h5 className={`section-title ${isSectionOpen ? \"open\" : \"closed\"}`}>\n//           Basic Information\n//         </h5>\n//         <span>\n//           {isSectionOpen ? (\n//             <i className=\"fa-solid fa-angle-up\"></i>\n//           ) : (\n//             <i className=\"fa-solid fa-angle-down\"></i>\n//           )}\n//         </span>\n//       </div>\n//       {isSectionOpen && (\n//         <form className=\"basic-information-form\" onSubmit={handleFormSubmit}>\n//           <div className=\"section personal-details\">\n//             <div className=\"form-group\">\n//               <label>First Name *</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"firstName\"\n//                 value={formData.firstName}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Last Name *</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"lastName\"\n//                 value={formData.lastName}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//           </div>\n//           <div className=\"section personal-details\">\n//             <div className=\"form-group\">\n//               <label>Date of Birth *</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"dob\"\n//                 value={formData.dob}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Religion *</label>\n//               <select\n//                 className=\"property-select\"\n//                 name=\"religion\"\n//                 value={formData.religion}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"\">Select</option>\n//                 <option value=\"Hindu\">Hindu</option>\n//                 <option value=\"Muslim\">Muslim</option>\n//                 <option value=\"Christian\">Christian</option>\n//               </select>\n//             </div>\n//           </div>\n//           <div className=\"section personal-details\">\n//             <div className=\"form-group\">\n//               <label>Gender *</label>\n//               <select\n//                 className=\"property-select\"\n//                 name=\"gender\"\n//                 value={formData.gender}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"\">Select</option>\n//                 <option value=\"Male\">Male</option>\n//                 <option value=\"Female\">Female</option>\n//               </select>\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Marital Status *</label>\n//               <select\n//                 className=\"property-select\"\n//                 name=\"maritalStatus\"\n//                 value={formData.maritalStatus}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"\">Select</option>\n//                 <option value=\"Unmarried\">Unmarried</option>\n//                 <option value=\"Married\">Married</option>\n//                 <option value=\"Divorced\">Divorced</option>\n//                 <option value=\"Widow\">Widow</option>\n//               </select>\n//             </div>\n//           </div>\n//           <div className=\"section personal-details\">\n//             <div className=\"form-group\">\n//               <label>Language *</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"language\"\n//                 value={formData.language}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Profession *</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"profession\"\n//                 value={formData.profession}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//           </div>\n//           <div className=\"section personal-details\">\n//             <div className=\"form-group\">\n//               <label>Smoking Habits *</label>\n//               <select\n//                 className=\"property-select\"\n//                 name=\"smokingHabits\"\n//                 value={formData.smokingHabits}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"\">Select</option>\n//                 <option value=\"non-smoker\">Non-Smoker</option>\n//                 <option value=\"occasional\">Occasional</option>\n//                 <option value=\"regular\">Regular</option>\n//               </select>\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Drinking Status *</label>\n//               <select\n//                 className=\"property-select\"\n//                 name=\"drinkingStatus\"\n//                 value={formData.drinkingStatus}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"\">Select</option>\n//                 <option value=\"non-drinker\">Non-Drinker</option>\n//                 <option value=\"occasional\">Occasional</option>\n//                 <option value=\"regular\">Regular</option>\n//               </select>\n//             </div>\n//           </div>\n//           <div className=\"section personal-details\">\n//             <div className=\"form-group\">\n//               <label>Financial Condition *</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"financialCondition\"\n//                 value={formData.financialCondition}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Blood Group *</label>\n//               <select\n//                 className=\"property-select\"\n//                 name=\"bloodGroup\"\n//                 value={formData.bloodGroup}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"\">Select</option>\n//                 <option value=\"A+\">A+</option>\n//                 <option value=\"A-\">A-</option>\n//                 <option value=\"B+\">B+</option>\n//                 <option value=\"B-\">B-</option>\n//                 <option value=\"AB+\">AB+</option>\n//                 <option value=\"AB-\">AB-</option>\n//                 <option value=\"O+\">O+</option>\n//                 <option value=\"O-\">O-</option>\n\n//               </select>\n//             </div>\n//           </div>\n//           <div className=\"section personal-details\">\n//             <div className=\"form-group\">\n//               <label>Address *</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"address\"\n//                 value={formData.address}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//           </div>\n//           <div className=\"section personal-details\">\n//             <div className=\"form-group\">\n//               <label>District</label>\n//               <select\n//                 name=\"district\"\n//                 value={selectedDistrict}\n//                 onChange={handleDistrictChange}\n//                 className=\"property-select\"\n//               >\n//                 <option value=\"\">Select District</option>\n//                 {Object.keys(TalukaDivision).map((district) => (\n//                   <option key={district} value={district}>\n//                     {district}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Division</label>\n//               <select\n//                 name=\"division\"\n//                 value={selectedDivision}\n//                 onChange={handleDivisionChange}\n//                 className=\"property-select\"\n//               >\n//                 <option value=\"\">Select Division</option>\n//                 {divisions.map((division) => (\n//                   <option key={division} value={division}>\n//                     {division}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//           </div>\n//           <div className=\"section contact-details\">\n//             <div className=\"form-group\">\n//               <label>Taluk</label>\n//               <select\n//                 name=\"taluk\"\n//                 value={formData.taluk}\n//                 onChange={handleTalukChange}\n//                 className=\"property-select\"\n//               >\n//                 <option value=\"\">Select Taluk</option>\n//                 {taluks.map((taluk) => (\n//                   <option key={taluk} value={taluk}>\n//                     {taluk}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Zip Code *</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"zipCode\"\n//                 value={formData.zipCode}\n//                 onChange={handleInputChange}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"form-actions\">\n//             <button type=\"submit\" className=\"btn-submit\">\n//               Submit\n//             </button>\n//           </div>\n//         </form>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default BasicInformation;\n\nimport React, { useState, useEffect } from \"react\";\nimport TalukaDivision from \"../../components/data/talukaDivisionData\";\nimport \"../../styles/user/dashboard.css\";\nimport \"../../styles/styles.css\";\nimport \"../../styles/user/profileSetting.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getBasicInformationByUserId, fetchUserInformation, postBasicInformation, updateBasicInformation, fetchBasicInformation } from \"../../services/ApiService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BasicInformation = ({\n  id\n}) => {\n  _s();\n  const [isSectionOpen, setIsSectionOpen] = useState(false);\n  const [selectedDistrict, setSelectedDistrict] = useState(\"\");\n  const [selectedDivision, setSelectedDivision] = useState(\"\");\n  // const [selectedTaluk, setSelectedTaluk] = useState(\"\");\n  const [divisions, setDivisions] = useState([]);\n  const [taluks, setTaluks] = useState([]);\n  const [basicInfo, setBasicInfo] = useState(null);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    dateOfBirth: \"\",\n    religion: \"\",\n    gender: \"\",\n    maritalStatus: \"\",\n    language: \"\",\n    profession: \"\",\n    bloodGroup: \"\",\n    presentAddress: \"\",\n    financialCondition: \"\",\n    smokingHabits: \"\",\n    drinkingStatus: \"\",\n    district: \"\",\n    division: \"\",\n    taluk: \"\",\n    zipCode: \"\"\n  });\n  const [userData, setUserData] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editId, setEditId] = useState(null); // To track editing ID\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchBasicData = async () => {\n      const storedUserData = localStorage.getItem(\"userData\");\n      if (!storedUserData) {\n        navigate(\"/matrilab/login\");\n        return;\n      }\n      const userId = JSON.parse(storedUserData).user.id;\n      try {\n        const response = await fetchUserInformation(userId);\n        if (response && response.statusCode === 200 && response.user) {\n          var _TalukaDivision$user$;\n          const user = response.user;\n          const basicData = user.basicInformation || {};\n          setFormData({\n            firstName: user.firstName || \"\",\n            lastName: user.lastName || \"\",\n            dateOfBirth: user.dob || \"\",\n            religion: user.religion || \"\",\n            gender: user.gender || \"\",\n            maritalStatus: user.maritalStatus || \"\",\n            language: user.language || \"\",\n            profession: user.profession || \"\",\n            bloodGroup: basicData.bloodGroup || \"\",\n            presentAddress: user.presentAddress || \"\",\n            financialCondition: user.financialCondition || \"\",\n            smokingHabits: user.smokingHabits || \"N/A\",\n            drinkingStatus: user.drinkingStatus || \"N/A\",\n            district: user.district || \"\",\n            division: user.division || \"\",\n            taluk: user.taluk || \"\",\n            zipCode: user.zipCode || \"\"\n          });\n          setBasicInfo(basicData);\n          setSelectedDistrict(user.district || \"\");\n          setDivisions(Object.keys(TalukaDivision[user.district] || {}));\n          setSelectedDivision(user.division || \"\");\n          setTaluks(((_TalukaDivision$user$ = TalukaDivision[user.district]) === null || _TalukaDivision$user$ === void 0 ? void 0 : _TalukaDivision$user$[user.division]) || []);\n        } else {\n          console.log(\"No valid user data found or API response error.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching basic information:\", error);\n        toast.error(\"Error fetching basic information.\");\n      }\n    };\n    fetchBasicData();\n  }, [navigate]);\n  const toggleSection = () => {\n    setIsSectionOpen(!isSectionOpen);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleDistrictChange = e => {\n    const district = e.target.value;\n    setSelectedDistrict(district);\n    setDivisions(Object.keys(TalukaDivision[district] || {}));\n    setSelectedDivision(\"\");\n    setTaluks([]);\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      district,\n      division: \"\",\n      taluk: \"\"\n    }));\n  };\n  const handleDivisionChange = e => {\n    const division = e.target.value;\n    setSelectedDivision(division);\n    setTaluks(TalukaDivision[selectedDistrict][division] || []);\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      division,\n      taluk: \"\"\n    }));\n  };\n  const handleTalukChange = e => {\n    const taluk = e.target.value;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      taluk: taluk // Add taluk to formData\n    }));\n  };\n\n  // Handle form submission (POST or PUT)\n  // const handleFormSubmit = async (e) => {\n  //   e.preventDefault();\n\n  //   // Ensure user ID is available\n  //   const storedUserData = localStorage.getItem(\"userData\");\n  //   const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\n\n  //   if (!userId) {\n  //     toast.error(\"User ID is missing. Please log in again.\");\n  //     return;\n  //   }\n\n  //   // Data to be submitted (Including userId)\n  //   const dataToSubmit = { ...formData, userId }; \n\n  //   try {\n  //     let response;\n\n  //     if (isEditing) {\n  //       // When editing, update the existing record (PUT)\n  //       response = await updateBasicInformation(editId, dataToSubmit); // Change API function name for updating basic info\n  //       toast.success(\"Basic Information updated successfully!\"); // Show success toast\n  //     } else {\n  //       // When creating new, post the data (POST)\n  //       response = await postBasicInformation(dataToSubmit); // Change API function name for posting basic info\n  //       toast.success(\"Basic Information added successfully!\"); // Show success toast\n  //     }\n\n  //     // Reset the form after submission\n  //     setFormData({\n  //       firstName: \"\",\n  //       lastName: \"\",\n  //       dateOfBirth: \"\",\n  //       religion: \"\",\n  //       gender: \"\",\n  //       maritalStatus: \"\",\n  //       language: \"\",\n  //       profession: \"\",\n  //       bloodGroup: \"\",\n  //       presentAddress: \"\",\n  //       financialCondition: \"\",\n  //       smokingHabits: \"\",\n  //       drinkingStatus: \"\",\n  //       district: \"\",\n  //       division: \"\",\n  //       taluk: \"\",\n  //       zipCode: \"\",\n  //     });\n\n  //     setIsEditing(false);\n  //     setEditId(null); // Reset edit ID\n  //   } catch (error) {\n  //     console.error(\"Error submitting form:\", error);\n  //     toast.error(\"Failed to submit basic information.\"); // Show error toast\n  //   }\n  // };\n\n  // Handle form submission (POST or PUT)\n  // const handleFormSubmit = async (e) => {\n  //   e.preventDefault();\n\n  //   // Ensure user ID is available\n  //   const storedUserData = localStorage.getItem(\"userData\");\n  //   const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\n\n  //   if (!userId) {\n  //     toast.error(\"User ID is missing. Please log in again.\");\n  //     return;\n  //   }\n\n  //   // Data to be submitted (Including userId)\n  //   const dataToSubmit = { ...formData, userId };\n\n  //   try {\n  //     let response;\n\n  //     if (isEditing) {\n  //       // When editing, update the existing record (PUT)\n  //       response = await updateBasicInformation(editId, dataToSubmit); // Change API function name for updating basic info\n  //       toast.success(\"Basic Information updated successfully!\"); // Show success toast\n  //     } else {\n  //       // When creating new, post the data (POST)\n  //       response = await postBasicInformation(dataToSubmit); // Change API function name for posting basic info\n  //       toast.success(\"Basic Information added successfully!\"); // Show success toast\n  //     }\n\n  //     // Reset the form after submission\n  //     setFormData({\n  //       firstName: \"\",\n  //       lastName: \"\",\n  //       dateOfBirth: \"\",\n  //       religion: \"\",\n  //       gender: \"\",\n  //       maritalStatus: \"\",\n  //       language: \"\",\n  //       profession: \"\",\n  //       bloodGroup: \"\",\n  //       presentAddress: \"\",\n  //       financialCondition: \"\",\n  //       smokingHabits: \"\",\n  //       drinkingStatus: \"\",\n  //       district: \"\",\n  //       division: \"\",\n  //       taluk: \"\",\n  //       zipCode: \"\",\n  //     });\n\n  //     // Reset the editing state\n  //     setIsEditing(false); // Reset to false after submission (for new record)\n\n  //     setEditId(null); // Reset edit ID\n\n  //   } catch (error) {\n  //     console.error(\"Error submitting form:\", error);\n  //     toast.error(\"Failed to submit basic information.\"); // Show error toast\n  //   }\n  // };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n\n    // Ensure user ID is available\n    const storedUserData = localStorage.getItem(\"userData\");\n    const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\n    if (!userId) {\n      toast.error(\"User ID is missing. Please log in again.\");\n      return;\n    }\n\n    // Data to be submitted (Including userId)\n    const dataToSubmit = {\n      ...formData,\n      userId\n    };\n    try {\n      let response;\n\n      // Check if the user already has data in the basic table (by userId)\n      const existingUserResponse = await getBasicInformationByUserId(userId);\n      console.log(\"existingUserResponse:\", existingUserResponse);\n\n      // if (existingUserResponse && existingUserResponse.statusCode === 200 && existingUserResponse.user) {\n      if (existingUserResponse && existingUserResponse.user) {\n        // If the user data exists, update the record (PUT)\n        response = await updateBasicInformation(existingUserResponse.user.id, dataToSubmit);\n        toast.success(\"Basic Information updated successfully!\");\n      } else {\n        // If no data exists, create a new entry (POST)\n        response = await postBasicInformation(dataToSubmit);\n        toast.success(\"Basic Information added successfully!\");\n      }\n\n      // ✅ Ensure response has valid data before updating state\n      if (response) {\n        setFormData(response); // Update form with latest data\n        setBasicInfo(response); // Update UI state with latest data\n      }\n\n      // Reset the form after submission\n      // setFormData({\n      //   firstName: \"\",\n      //   lastName: \"\",\n      //   dateOfBirth: \"\",\n      //   religion: \"\",\n      //   gender: \"\",\n      //   maritalStatus: \"\",\n      //   language: \"\",\n      //   profession: \"\",\n      //   bloodGroup: \"\",\n      //   presentAddress: \"\",\n      //   financialCondition: \"\",\n      //   smokingHabits: \"\",\n      //   drinkingStatus: \"\",\n      //   district: \"\",\n      //   division: \"\",\n      //   taluk: \"\",\n      //   zipCode: \"\",\n      // });\n\n      // Reset the editing state\n      setIsEditing(false); // Reset to false after submission (for new record)\n      setEditId(null); // Reset edit ID\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      toast.error(\"Failed to submit basic information.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        onClick: toggleSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: `section-title ${isSectionOpen ? \"open\" : \"closed\"}`,\n          children: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isSectionOpen ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-angle-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-angle-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this), isSectionOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"basic-information-form\",\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section personal-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"firstName\",\n              value: formData.firstName,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"lastName\",\n              value: formData.lastName,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section personal-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date of Birth *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"dateOfBirth\",\n              value: formData.dateOfBirth,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Religion *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"property-select\",\n              name: \"religion\",\n              value: formData.religion,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Hindu\",\n                children: \"Hindu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Muslim\",\n                children: \"Muslim\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Christian\",\n                children: \"Christian\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section personal-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Gender *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"property-select\",\n              name: \"gender\",\n              value: formData.gender,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Male\",\n                children: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Female\",\n                children: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Marital Status *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"property-select\",\n              name: \"maritalStatus\",\n              value: formData.maritalStatus,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Unmarried\",\n                children: \"Unmarried\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Married\",\n                children: \"Married\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Divorced\",\n                children: \"Divorced\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Widow\",\n                children: \"Widow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 846,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section personal-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Language *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"language\",\n              value: formData.language,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Profession *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"profession\",\n              value: formData.profession,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section personal-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Smoking Habits *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"property-select\",\n              name: \"smokingHabits\",\n              value: formData.smokingHabits,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"non-smoker\",\n                children: \"Non-Smoker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"occasional\",\n                children: \"Occasional\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"regular\",\n                children: \"Regular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Drinking Status *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"property-select\",\n              name: \"drinkingStatus\",\n              value: formData.drinkingStatus,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"non-drinker\",\n                children: \"Non-Drinker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 898,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"occasional\",\n                children: \"Occasional\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"regular\",\n                children: \"Regular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section personal-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Financial Condition *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"financialCondition\",\n              value: formData.financialCondition,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Blood Group *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"property-select\",\n              name: \"bloodGroup\",\n              value: formData.bloodGroup,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"A+\",\n                children: \"A+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"A-\",\n                children: \"A-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"B+\",\n                children: \"B+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"B-\",\n                children: \"B-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"AB+\",\n                children: \"AB+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"AB-\",\n                children: \"AB-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"O+\",\n                children: \"O+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"O-\",\n                children: \"O-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section personal-details\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"presentAddress\",\n              value: formData.presentAddress,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section personal-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"District\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"district\",\n              value: selectedDistrict,\n              onChange: handleDistrictChange,\n              className: \"property-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select District\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 19\n              }, this), Object.keys(TalukaDivision).map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: district,\n                children: district\n              }, district, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Division\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 966,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"division\",\n              value: selectedDivision,\n              onChange: handleDivisionChange,\n              className: \"property-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Division\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 19\n              }, this), divisions.map(division => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: division,\n                children: division\n              }, division, false, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section contact-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Taluk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"taluk\",\n              value: formData.taluk,\n              onChange: handleTalukChange,\n              className: \"property-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Taluk\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 19\n              }, this), taluks.map(taluk => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: taluk,\n                children: taluk\n              }, taluk, false, {\n                fileName: _jsxFileName,\n                lineNumber: 993,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 985,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Zip Code *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"zipCode\",\n              value: formData.zipCode,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BasicInformation, \"tR5OW8r2HsxgS8gIC/QGYTOZKqE=\", false, function () {\n  return [useNavigate];\n});\n_c = BasicInformation;\nexport default BasicInformation;\nvar _c;\n$RefreshReg$(_c, \"BasicInformation\");","map":{"version":3,"names":["React","useState","useEffect","TalukaDivision","useNavigate","getBasicInformationByUserId","fetchUserInformation","postBasicInformation","updateBasicInformation","fetchBasicInformation","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","BasicInformation","id","_s","isSectionOpen","setIsSectionOpen","selectedDistrict","setSelectedDistrict","selectedDivision","setSelectedDivision","divisions","setDivisions","taluks","setTaluks","basicInfo","setBasicInfo","formData","setFormData","firstName","lastName","dateOfBirth","religion","gender","maritalStatus","language","profession","bloodGroup","presentAddress","financialCondition","smokingHabits","drinkingStatus","district","division","taluk","zipCode","userData","setUserData","isEditing","setIsEditing","editId","setEditId","navigate","fetchBasicData","storedUserData","localStorage","getItem","userId","JSON","parse","user","response","statusCode","_TalukaDivision$user$","basicData","basicInformation","dob","Object","keys","console","log","error","toggleSection","handleInputChange","e","name","value","target","handleDistrictChange","prevFormData","handleDivisionChange","handleTalukChange","handleFormSubmit","preventDefault","dataToSubmit","existingUserResponse","success","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","map","_c","$RefreshReg$"],"sources":["E:/MatriLab-frontend/src/screens/user/BasicInformation.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import TalukaDivision from \"../../components/data/talukaDivisionData\";\r\n// import \"../../styles/user/dashboard.css\";\r\n// import \"../../styles/styles.css\";\r\n// import \"../../styles/user/profileSetting.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import MyApiService from \"../../services/MyApiService\";\r\n\r\n// const BasicInformation = ({ id }) => {\r\n//   const [isSectionOpen, setIsSectionOpen] = useState(false);\r\n//   const [selectedDistrict, setSelectedDistrict] = useState(\"\");\r\n//   const [selectedDivision, setSelectedDivision] = useState(\"\");\r\n//   const [selectedTaluk, setSelectedTaluk] = useState(\"\");\r\n//   const [divisions, setDivisions] = useState([]);\r\n//   const [taluks, setTaluks] = useState([]);\r\n//   const [formData, setFormData] = useState({\r\n//     firstName: \"\",\r\n//     lastName: \"\",\r\n//     dob: \"\",\r\n//     religion: \"\",\r\n//     gender: \"\",\r\n//     maritalStatus: \"\",\r\n//     language: \"\",\r\n//     profession: \"\",\r\n//     bloodGroup: \"\",\r\n//     address: \"\",\r\n//     financialCondition: \"\",\r\n//     smokingHabits: \"\",\r\n//     drinkingStatus: \"\",\r\n//     district: \"\",\r\n//     division: \"\",\r\n//     taluk: \"\",\r\n//     zipCode: \"\",\r\n//   });\r\n\r\n//   const [userData, setUserData] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     // Retrieve the stored user data from localStorage\r\n//     const storedUserData = localStorage.getItem(\"userData\");\r\n//     console.log(\"user data\", storedUserData);\r\n\r\n//     if (storedUserData) {\r\n//       // Parse the stored data\r\n//       const parsedData = JSON.parse(storedUserData);\r\n\r\n//       // Make sure user data exists and set formData accordingly\r\n//       if (parsedData.user) {\r\n//         setUserData(parsedData);\r\n//         const { district, division, taluk } = parsedData.user;\r\n\r\n//         console.log(\"Smoking:\", parsedData.user.smokingHabits);\r\n//         console.log(\"Drinking:\", parsedData.user.drinkingStatus);\r\n\r\n//         // Prefill formData with values from userData\r\n//         setFormData((prevFormData) => ({\r\n//           ...prevFormData,\r\n//           firstName: parsedData.user.firstName || \"\",\r\n//           lastName: parsedData.user.lastName || \"\",\r\n//           dob: parsedData.user.dob || \"\",\r\n//           religion: parsedData.user.religion || \"\",\r\n//           gender: parsedData.user.gender || \"\",\r\n//           maritalStatus: parsedData.user.maritalStatus || \"\",\r\n//           language: parsedData.user.language || \"\",\r\n//           profession: parsedData.user.profession || \"\",\r\n//           bloodGroup: parsedData.user.bloodGroup || \"\",\r\n//           address: parsedData.user.presentAddress || \"\",\r\n//           financialCondition: parsedData.user.financialCondition || \"\",\r\n//           smokingHabits: parsedData.user.smokingHabits || \"N/A\",\r\n//           drinkingStatus: parsedData.user.drinkingStatus || \"N/A\",\r\n//           district: parsedData.user.district || \"\",\r\n//           division: parsedData.user.division || \"\",\r\n//           taluk: parsedData.user.taluk || \"\",\r\n//           zipCode: parsedData.user.zipCode || \"\",\r\n//         }));\r\n//         setSelectedDistrict(district || \"\");\r\n//         setDivisions(Object.keys(TalukaDivision[district] || {}));\r\n//         setSelectedDivision(division || \"\");\r\n//         setTaluks(TalukaDivision[district]?.[division] || []);\r\n//       }\r\n//     } else {\r\n//       // Redirect to login if no user data is found\r\n//       navigate(\"/matrilab/login\");\r\n//     }\r\n//   }, [navigate]);\r\n\r\n//   const toggleSection = () => {\r\n//     setIsSectionOpen(!isSectionOpen);\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleDistrictChange = (e) => {\r\n//     const district = e.target.value;\r\n//     setSelectedDistrict(district);\r\n//     setDivisions(Object.keys(TalukaDivision[district] || {}));\r\n//     setSelectedDivision(\"\");\r\n//     setTaluks([]);\r\n//     setFormData((prevFormData) => ({\r\n//       ...prevFormData,\r\n//       district,\r\n//       division: \"\",\r\n//       taluk: \"\",\r\n//     }));\r\n//   };\r\n\r\n//   const handleDivisionChange = (e) => {\r\n//     const division = e.target.value;\r\n//     setSelectedDivision(division);\r\n//     setTaluks(TalukaDivision[selectedDistrict][division] || []);\r\n//     setFormData((prevFormData) => ({\r\n//       ...prevFormData,\r\n//       division,\r\n//       taluk: \"\",\r\n//     }));\r\n//   };\r\n\r\n//   const handleTalukChange = (e) => {\r\n//     const taluk = e.target.value;\r\n//     setFormData((prevFormData) => ({\r\n//       ...prevFormData,\r\n//       taluk: taluk, // Add taluk to formData\r\n//     }));\r\n//   };\r\n\r\n//   const handleFormSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await MyApiService.submitBasicDetails(formData);\r\n//       console.log(\"Form submitted successfully:\", response);\r\n//       alert(\"Physical Attributes submitted successfully!\"); // Display success message\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting form:\", error);\r\n//       alert(\"Failed to submit Physical Attributes.\"); // Display error message\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"collapsible-section\">\r\n//       <div className=\"section-header\" onClick={toggleSection}>\r\n//         <h5 className={`section-title ${isSectionOpen ? \"open\" : \"closed\"}`}>\r\n//           Basic Information\r\n//         </h5>\r\n//         <span>\r\n//           {isSectionOpen ? (\r\n//             <i className=\"fa-solid fa-angle-up\"></i>\r\n//           ) : (\r\n//             <i className=\"fa-solid fa-angle-down\"></i>\r\n//           )}\r\n//         </span>\r\n//       </div>\r\n//       {isSectionOpen && (\r\n//         <form className=\"basic-information-form\" onSubmit={handleFormSubmit}>\r\n//           <div className=\"section personal-details\">\r\n//             <div className=\"form-group\">\r\n//               <label>First Name *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"firstName\"\r\n//                 value={formData.firstName}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Last Name *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"lastName\"\r\n//                 value={formData.lastName}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"section personal-details\">\r\n//             <div className=\"form-group\">\r\n//               <label>Date of Birth *</label>\r\n//               <input\r\n//                 type=\"date\"\r\n//                 name=\"dob\"\r\n//                 value={formData.dob}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Religion *</label>\r\n//               <select\r\n//                 className=\"property-select\"\r\n//                 name=\"religion\"\r\n//                 value={formData.religion}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select</option>\r\n//                 <option value=\"Hindu\">Hindu</option>\r\n//                 <option value=\"Muslim\">Muslim</option>\r\n//                 <option value=\"Christian\">Christian</option>\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"section personal-details\">\r\n//             <div className=\"form-group\">\r\n//               <label>Gender *</label>\r\n//               <select\r\n//                 className=\"property-select\"\r\n//                 name=\"gender\"\r\n//                 value={formData.gender}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select</option>\r\n//                 <option value=\"Male\">Male</option>\r\n//                 <option value=\"Female\">Female</option>\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Marital Status *</label>\r\n//               <select\r\n//                 className=\"property-select\"\r\n//                 name=\"maritalStatus\"\r\n//                 value={formData.maritalStatus}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select</option>\r\n//                 <option value=\"Unmarried\">Unmarried</option>\r\n//                 <option value=\"Married\">Married</option>\r\n//                 <option value=\"Divorced\">Divorced</option>\r\n//                 <option value=\"Widow\">Widow</option>\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"section personal-details\">\r\n//             <div className=\"form-group\">\r\n//               <label>Language *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"language\"\r\n//                 value={formData.language}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Profession *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"profession\"\r\n//                 value={formData.profession}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"section personal-details\">\r\n//             <div className=\"form-group\">\r\n//               <label>Smoking Habits *</label>\r\n//               <select\r\n//                 className=\"property-select\"\r\n//                 name=\"smokingHabits\"\r\n//                 value={formData.smokingHabits}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select</option>\r\n//                 <option value=\"non-smoker\">Non-Smoker</option>\r\n//                 <option value=\"occasional\">Occasional</option>\r\n//                 <option value=\"regular\">Regular</option>\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Drinking Status *</label>\r\n//               <select\r\n//                 className=\"property-select\"\r\n//                 name=\"drinkingStatus\"\r\n//                 value={formData.drinkingStatus}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select</option>\r\n//                 <option value=\"non-drinker\">Non-Drinker</option>\r\n//                 <option value=\"occasional\">Occasional</option>\r\n//                 <option value=\"regular\">Regular</option>\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"section personal-details\">\r\n//             <div className=\"form-group\">\r\n//               <label>Financial Condition *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"financialCondition\"\r\n//                 value={formData.financialCondition}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Blood Group *</label>\r\n//               <select\r\n//                 className=\"property-select\"\r\n//                 name=\"bloodGroup\"\r\n//                 value={formData.bloodGroup}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select</option>\r\n//                 <option value=\"A+\">A+</option>\r\n//                 <option value=\"A-\">A-</option>\r\n//                 <option value=\"B+\">B+</option>\r\n//                 <option value=\"B-\">B-</option>\r\n//                 <option value=\"AB+\">AB+</option>\r\n//                 <option value=\"AB-\">AB-</option>\r\n//                 <option value=\"O+\">O+</option>\r\n//                 <option value=\"O-\">O-</option>\r\n\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"section personal-details\">\r\n//             <div className=\"form-group\">\r\n//               <label>Address *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"address\"\r\n//                 value={formData.address}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"section personal-details\">\r\n//             <div className=\"form-group\">\r\n//               <label>District</label>\r\n//               <select\r\n//                 name=\"district\"\r\n//                 value={selectedDistrict}\r\n//                 onChange={handleDistrictChange}\r\n//                 className=\"property-select\"\r\n//               >\r\n//                 <option value=\"\">Select District</option>\r\n//                 {Object.keys(TalukaDivision).map((district) => (\r\n//                   <option key={district} value={district}>\r\n//                     {district}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Division</label>\r\n//               <select\r\n//                 name=\"division\"\r\n//                 value={selectedDivision}\r\n//                 onChange={handleDivisionChange}\r\n//                 className=\"property-select\"\r\n//               >\r\n//                 <option value=\"\">Select Division</option>\r\n//                 {divisions.map((division) => (\r\n//                   <option key={division} value={division}>\r\n//                     {division}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"section contact-details\">\r\n//             <div className=\"form-group\">\r\n//               <label>Taluk</label>\r\n//               <select\r\n//                 name=\"taluk\"\r\n//                 value={formData.taluk}\r\n//                 onChange={handleTalukChange}\r\n//                 className=\"property-select\"\r\n//               >\r\n//                 <option value=\"\">Select Taluk</option>\r\n//                 {taluks.map((taluk) => (\r\n//                   <option key={taluk} value={taluk}>\r\n//                     {taluk}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Zip Code *</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"zipCode\"\r\n//                 value={formData.zipCode}\r\n//                 onChange={handleInputChange}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"form-actions\">\r\n//             <button type=\"submit\" className=\"btn-submit\">\r\n//               Submit\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BasicInformation;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TalukaDivision from \"../../components/data/talukaDivisionData\";\r\nimport \"../../styles/user/dashboard.css\";\r\nimport \"../../styles/styles.css\";\r\nimport \"../../styles/user/profileSetting.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getBasicInformationByUserId,\r\n  fetchUserInformation,\r\n  postBasicInformation,\r\n  updateBasicInformation,\r\n  fetchBasicInformation,\r\n} from \"../../services/ApiService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n\r\nconst BasicInformation = ({ id }) => {\r\n  const [isSectionOpen, setIsSectionOpen] = useState(false);\r\n  const [selectedDistrict, setSelectedDistrict] = useState(\"\");\r\n  const [selectedDivision, setSelectedDivision] = useState(\"\");\r\n  // const [selectedTaluk, setSelectedTaluk] = useState(\"\");\r\n  const [divisions, setDivisions] = useState([]);\r\n  const [taluks, setTaluks] = useState([]);\r\n  const [basicInfo, setBasicInfo] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    dateOfBirth: \"\",\r\n    religion: \"\",\r\n    gender: \"\",\r\n    maritalStatus: \"\",\r\n    language: \"\",\r\n    profession: \"\",\r\n    bloodGroup: \"\",\r\n    presentAddress: \"\",\r\n    financialCondition: \"\",\r\n    smokingHabits: \"\",\r\n    drinkingStatus: \"\",\r\n    district: \"\",\r\n    division: \"\",\r\n    taluk: \"\",\r\n    zipCode: \"\",\r\n  });\r\n  \r\n\r\n  const [userData, setUserData] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editId, setEditId] = useState(null); // To track editing ID\r\n  const navigate = useNavigate();\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchBasicData = async () => {\r\n      const storedUserData = localStorage.getItem(\"userData\");\r\n      if (!storedUserData) {\r\n        navigate(\"/matrilab/login\");\r\n        return;\r\n      }\r\n\r\n      const userId = JSON.parse(storedUserData).user.id;\r\n      try {\r\n        const response = await fetchUserInformation(userId);\r\n        if (response && response.statusCode === 200 && response.user) {\r\n          const user = response.user;\r\n          const basicData = user.basicInformation || {};\r\n\r\n          setFormData({\r\n            firstName: user.firstName || \"\",\r\n            lastName: user.lastName || \"\",\r\n            dateOfBirth: user.dob || \"\",\r\n            religion: user.religion || \"\",\r\n            gender: user.gender || \"\",\r\n            maritalStatus: user.maritalStatus || \"\",\r\n            language: user.language || \"\",\r\n            profession: user.profession || \"\",\r\n            bloodGroup: basicData.bloodGroup || \"\",\r\n            presentAddress: user.presentAddress || \"\",\r\n            financialCondition: user.financialCondition || \"\",\r\n            smokingHabits: user.smokingHabits || \"N/A\",\r\n            drinkingStatus: user.drinkingStatus || \"N/A\",\r\n            district: user.district || \"\",\r\n            division: user.division || \"\",\r\n            taluk: user.taluk || \"\",\r\n            zipCode: user.zipCode || \"\",\r\n          });\r\n          \r\n          setBasicInfo(basicData);\r\n          setSelectedDistrict(user.district || \"\");\r\n          setDivisions(Object.keys(TalukaDivision[user.district] || {}));\r\n          setSelectedDivision(user.division || \"\");\r\n          setTaluks(TalukaDivision[user.district]?.[user.division] || []);\r\n        } else {\r\n          console.log(\"No valid user data found or API response error.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching basic information:\", error);\r\n        toast.error(\"Error fetching basic information.\");\r\n      }\r\n    };\r\n\r\n    fetchBasicData();\r\n  }, [navigate]);\r\n  \r\n\r\n \r\nconst toggleSection = () => {\r\n    setIsSectionOpen(!isSectionOpen);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleDistrictChange = (e) => {\r\n    const district = e.target.value;\r\n    setSelectedDistrict(district);\r\n    setDivisions(Object.keys(TalukaDivision[district] || {}));\r\n    setSelectedDivision(\"\");\r\n    setTaluks([]);\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      district,\r\n      division: \"\",\r\n      taluk: \"\",\r\n    }));\r\n  };\r\n\r\n  const handleDivisionChange = (e) => {\r\n    const division = e.target.value;\r\n    setSelectedDivision(division);\r\n    setTaluks(TalukaDivision[selectedDistrict][division] || []);\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      division,\r\n      taluk: \"\",\r\n    }));\r\n  };\r\n\r\n  const handleTalukChange = (e) => {\r\n    const taluk = e.target.value;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      taluk: taluk, // Add taluk to formData\r\n    }));\r\n  };\r\n\r\n  // Handle form submission (POST or PUT)\r\n  // const handleFormSubmit = async (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   // Ensure user ID is available\r\n  //   const storedUserData = localStorage.getItem(\"userData\");\r\n  //   const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\r\n\r\n  //   if (!userId) {\r\n  //     toast.error(\"User ID is missing. Please log in again.\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   // Data to be submitted (Including userId)\r\n  //   const dataToSubmit = { ...formData, userId }; \r\n\r\n  //   try {\r\n  //     let response;\r\n\r\n  //     if (isEditing) {\r\n  //       // When editing, update the existing record (PUT)\r\n  //       response = await updateBasicInformation(editId, dataToSubmit); // Change API function name for updating basic info\r\n  //       toast.success(\"Basic Information updated successfully!\"); // Show success toast\r\n  //     } else {\r\n  //       // When creating new, post the data (POST)\r\n  //       response = await postBasicInformation(dataToSubmit); // Change API function name for posting basic info\r\n  //       toast.success(\"Basic Information added successfully!\"); // Show success toast\r\n  //     }\r\n\r\n  //     // Reset the form after submission\r\n  //     setFormData({\r\n  //       firstName: \"\",\r\n  //       lastName: \"\",\r\n  //       dateOfBirth: \"\",\r\n  //       religion: \"\",\r\n  //       gender: \"\",\r\n  //       maritalStatus: \"\",\r\n  //       language: \"\",\r\n  //       profession: \"\",\r\n  //       bloodGroup: \"\",\r\n  //       presentAddress: \"\",\r\n  //       financialCondition: \"\",\r\n  //       smokingHabits: \"\",\r\n  //       drinkingStatus: \"\",\r\n  //       district: \"\",\r\n  //       division: \"\",\r\n  //       taluk: \"\",\r\n  //       zipCode: \"\",\r\n  //     });\r\n\r\n  //     setIsEditing(false);\r\n  //     setEditId(null); // Reset edit ID\r\n  //   } catch (error) {\r\n  //     console.error(\"Error submitting form:\", error);\r\n  //     toast.error(\"Failed to submit basic information.\"); // Show error toast\r\n  //   }\r\n  // };\r\n\r\n  // Handle form submission (POST or PUT)\r\n// const handleFormSubmit = async (e) => {\r\n//   e.preventDefault();\r\n\r\n//   // Ensure user ID is available\r\n//   const storedUserData = localStorage.getItem(\"userData\");\r\n//   const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\r\n\r\n//   if (!userId) {\r\n//     toast.error(\"User ID is missing. Please log in again.\");\r\n//     return;\r\n//   }\r\n\r\n//   // Data to be submitted (Including userId)\r\n//   const dataToSubmit = { ...formData, userId };\r\n\r\n//   try {\r\n//     let response;\r\n\r\n//     if (isEditing) {\r\n//       // When editing, update the existing record (PUT)\r\n//       response = await updateBasicInformation(editId, dataToSubmit); // Change API function name for updating basic info\r\n//       toast.success(\"Basic Information updated successfully!\"); // Show success toast\r\n//     } else {\r\n//       // When creating new, post the data (POST)\r\n//       response = await postBasicInformation(dataToSubmit); // Change API function name for posting basic info\r\n//       toast.success(\"Basic Information added successfully!\"); // Show success toast\r\n//     }\r\n\r\n//     // Reset the form after submission\r\n//     setFormData({\r\n//       firstName: \"\",\r\n//       lastName: \"\",\r\n//       dateOfBirth: \"\",\r\n//       religion: \"\",\r\n//       gender: \"\",\r\n//       maritalStatus: \"\",\r\n//       language: \"\",\r\n//       profession: \"\",\r\n//       bloodGroup: \"\",\r\n//       presentAddress: \"\",\r\n//       financialCondition: \"\",\r\n//       smokingHabits: \"\",\r\n//       drinkingStatus: \"\",\r\n//       district: \"\",\r\n//       division: \"\",\r\n//       taluk: \"\",\r\n//       zipCode: \"\",\r\n//     });\r\n\r\n//     // Reset the editing state\r\n//     setIsEditing(false); // Reset to false after submission (for new record)\r\n\r\n//     setEditId(null); // Reset edit ID\r\n\r\n//   } catch (error) {\r\n//     console.error(\"Error submitting form:\", error);\r\n//     toast.error(\"Failed to submit basic information.\"); // Show error toast\r\n//   }\r\n// };\r\n\r\n\r\nconst handleFormSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  // Ensure user ID is available\r\n  const storedUserData = localStorage.getItem(\"userData\");\r\n  const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\r\n\r\n  if (!userId) {\r\n    toast.error(\"User ID is missing. Please log in again.\");\r\n    return;\r\n  }\r\n\r\n  // Data to be submitted (Including userId)\r\n  const dataToSubmit = { ...formData, userId };\r\n\r\n  try {\r\n    let response;\r\n\r\n    // Check if the user already has data in the basic table (by userId)\r\n    const existingUserResponse = await getBasicInformationByUserId(userId);\r\n    console.log(\"existingUserResponse:\", existingUserResponse);\r\n\r\n    // if (existingUserResponse && existingUserResponse.statusCode === 200 && existingUserResponse.user) {\r\n    if (existingUserResponse && existingUserResponse.user) {\r\n      // If the user data exists, update the record (PUT)\r\n      response = await updateBasicInformation(existingUserResponse.user.id, dataToSubmit);\r\n      toast.success(\"Basic Information updated successfully!\");\r\n    } else {\r\n      // If no data exists, create a new entry (POST)\r\n      response = await postBasicInformation(dataToSubmit);\r\n      toast.success(\"Basic Information added successfully!\");\r\n    }\r\n\r\n    // ✅ Ensure response has valid data before updating state\r\n    if (response) {\r\n      setFormData(response);   // Update form with latest data\r\n      setBasicInfo(response);  // Update UI state with latest data\r\n    }\r\n\r\n    // Reset the form after submission\r\n    // setFormData({\r\n    //   firstName: \"\",\r\n    //   lastName: \"\",\r\n    //   dateOfBirth: \"\",\r\n    //   religion: \"\",\r\n    //   gender: \"\",\r\n    //   maritalStatus: \"\",\r\n    //   language: \"\",\r\n    //   profession: \"\",\r\n    //   bloodGroup: \"\",\r\n    //   presentAddress: \"\",\r\n    //   financialCondition: \"\",\r\n    //   smokingHabits: \"\",\r\n    //   drinkingStatus: \"\",\r\n    //   district: \"\",\r\n    //   division: \"\",\r\n    //   taluk: \"\",\r\n    //   zipCode: \"\",\r\n    // });\r\n\r\n    // Reset the editing state\r\n    setIsEditing(false); // Reset to false after submission (for new record)\r\n    setEditId(null); // Reset edit ID\r\n\r\n  } catch (error) {\r\n    console.error(\"Error submitting form:\", error);\r\n    toast.error(\"Failed to submit basic information.\");\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"collapsible-section\">\r\n        <div className=\"section-header\" onClick={toggleSection}>\r\n          <h5 className={`section-title ${isSectionOpen ? \"open\" : \"closed\"}`}>\r\n            Basic Information\r\n          </h5>\r\n          <span>\r\n            {isSectionOpen ? (\r\n              <i className=\"fa-solid fa-angle-up\"></i>\r\n            ) : (\r\n              <i className=\"fa-solid fa-angle-down\"></i>\r\n            )}\r\n          </span>\r\n        </div>\r\n        {isSectionOpen && (\r\n          <form className=\"basic-information-form\" onSubmit={handleFormSubmit}>\r\n            <div className=\"section personal-details\">\r\n              <div className=\"form-group\">\r\n                <label>First Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={formData.firstName}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Last Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  value={formData.lastName}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"section personal-details\">\r\n              <div className=\"form-group\">\r\n                <label>Date of Birth *</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"dateOfBirth\"\r\n                  value={formData.dateOfBirth}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Religion *</label>\r\n                <select\r\n                  className=\"property-select\"\r\n                  name=\"religion\"\r\n                  value={formData.religion}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"Hindu\">Hindu</option>\r\n                  <option value=\"Muslim\">Muslim</option>\r\n                  <option value=\"Christian\">Christian</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"section personal-details\">\r\n              <div className=\"form-group\">\r\n                <label>Gender *</label>\r\n                <select\r\n                  className=\"property-select\"\r\n                  name=\"gender\"\r\n                  value={formData.gender}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Marital Status *</label>\r\n                <select\r\n                  className=\"property-select\"\r\n                  name=\"maritalStatus\"\r\n                  value={formData.maritalStatus}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"Unmarried\">Unmarried</option>\r\n                  <option value=\"Married\">Married</option>\r\n                  <option value=\"Divorced\">Divorced</option>\r\n                  <option value=\"Widow\">Widow</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"section personal-details\">\r\n              <div className=\"form-group\">\r\n                <label>Language *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"language\"\r\n                  value={formData.language}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Profession *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"profession\"\r\n                  value={formData.profession}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"section personal-details\">\r\n              <div className=\"form-group\">\r\n                <label>Smoking Habits *</label>\r\n                <select\r\n                  className=\"property-select\"\r\n                  name=\"smokingHabits\"\r\n                  value={formData.smokingHabits}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"non-smoker\">Non-Smoker</option>\r\n                  <option value=\"occasional\">Occasional</option>\r\n                  <option value=\"regular\">Regular</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Drinking Status *</label>\r\n                <select\r\n                  className=\"property-select\"\r\n                  name=\"drinkingStatus\"\r\n                  value={formData.drinkingStatus}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"non-drinker\">Non-Drinker</option>\r\n                  <option value=\"occasional\">Occasional</option>\r\n                  <option value=\"regular\">Regular</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"section personal-details\">\r\n              <div className=\"form-group\">\r\n                <label>Financial Condition *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"financialCondition\"\r\n                  value={formData.financialCondition}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Blood Group *</label>\r\n                <select\r\n                  className=\"property-select\"\r\n                  name=\"bloodGroup\"\r\n                  value={formData.bloodGroup}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"A+\">A+</option>\r\n                  <option value=\"A-\">A-</option>\r\n                  <option value=\"B+\">B+</option>\r\n                  <option value=\"B-\">B-</option>\r\n                  <option value=\"AB+\">AB+</option>\r\n                  <option value=\"AB-\">AB-</option>\r\n                  <option value=\"O+\">O+</option>\r\n                  <option value=\"O-\">O-</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"section personal-details\">\r\n              <div className=\"form-group\">\r\n                <label>Address *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"presentAddress\"\r\n                  value={formData.presentAddress}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"section personal-details\">\r\n              <div className=\"form-group\">\r\n                <label>District</label>\r\n                <select\r\n                  name=\"district\"\r\n                  value={selectedDistrict}\r\n                  onChange={handleDistrictChange}\r\n                  className=\"property-select\"\r\n                >\r\n                  <option value=\"\">Select District</option>\r\n                  {Object.keys(TalukaDivision).map((district) => (\r\n                    <option key={district} value={district}>\r\n                      {district}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Division</label>\r\n                <select\r\n                  name=\"division\"\r\n                  value={selectedDivision}\r\n                  onChange={handleDivisionChange}\r\n                  className=\"property-select\"\r\n                >\r\n                  <option value=\"\">Select Division</option>\r\n                  {divisions.map((division) => (\r\n                    <option key={division} value={division}>\r\n                      {division}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"section contact-details\">\r\n              <div className=\"form-group\">\r\n                <label>Taluk</label>\r\n                <select\r\n                  name=\"taluk\"\r\n                  value={formData.taluk}\r\n                  onChange={handleTalukChange}\r\n                  className=\"property-select\"\r\n                >\r\n                  <option value=\"\">Select Taluk</option>\r\n                  {taluks.map((taluk) => (\r\n                    <option key={taluk} value={taluk}>\r\n                      {taluk}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Zip Code *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"zipCode\"\r\n                  value={formData.zipCode}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n              <button type=\"submit\" className=\"btn-submit\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n\r\n      {/* Toast Notifications */}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInformation;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}