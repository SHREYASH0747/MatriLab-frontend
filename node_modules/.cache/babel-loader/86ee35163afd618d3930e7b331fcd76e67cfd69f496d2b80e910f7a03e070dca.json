{"ast":null,"code":"var _jsxFileName = \"E:\\\\MatriLab-frontend\\\\src\\\\screens\\\\user\\\\EducationInformation.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../../styles/user/dashboard.css\";\n// import \"../../styles/styles.css\";\n// import \"../../styles/user/profileSetting.css\";\n// import {\n//   educationInformationForm,\n//   fetchEducationData,\n//   deleteEducationInformation,\n// } from \"../../services/ApiService\";\n\n// const EducationInformation = () => {\n//   const [isSectionOpen, setIsSectionOpen] = useState(false);\n//   const [showAlert, setShowAlert] = useState(false);\n//   const [educationData, setEducationData] = useState([]);\n//   const [formData, setFormData] = useState({\n//     institute: \"\",\n//     degree: \"\",\n//     rollNumber: \"\",\n//     registrationNumber: \"\",\n//     fieldOfStudy: \"\",\n//     result: \"\",\n//     startYear: \"\",\n//     endYear: \"\",\n//   });\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [editId, setEditId] = useState(null); // To track editing ID\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetchEducationData();\n//         if (response && response.data) {\n//           setEducationData(response.data); // Set the career data only if it's valid\n//         } else {\n//           alert(\"No data available or response is malformed.\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching education data:\", error);\n//         alert(\"Failed to fetch education data. Please try again later.\");\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Ensure user ID is available\n//     const storedUserData = localStorage.getItem(\"userData\");\n//     const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\n\n//     if (!userId) {\n//       alert(\"User ID is missing. Please log in again.\");\n//       return;\n//     }\n\n//     const dataToSubmit = { ...formData, userId };\n\n//     try {\n//       let response;\n\n//       if (isEditing) {\n//         // When editing, send the ID to the backend for updating the record\n//         response = await educationInformationForm(\n//           { ...dataToSubmit, id: editId },\n//           \"PUT\"\n//         );\n//       } else {\n//         // When creating new, no ID is sent\n//         response = await educationInformationForm(dataToSubmit, \"POST\");\n//       }\n\n//       alert(\"Education Information submitted successfully!\");\n//       setShowAlert(false);\n\n//       // Update local state based on whether we are editing or adding a new record\n//       const updatedData = isEditing\n//         ? educationData.map((item) =>\n//             item.id === editId ? response.data : item\n//           ) // Update the specific record\n//         : [...educationData, response.data]; // Add new data if not editing\n\n//       setEducationData(updatedData);\n\n//       // Reset the form\n//       setFormData({\n//         institute: \"\",\n//         degree: \"\",\n//         rollNumber: \"\",\n//         registrationNumber: \"\",\n//         fieldOfStudy: \"\",\n//         result: \"\",\n//         startYear: \"\",\n//         endYear: \"\",\n//       });\n//       setIsEditing(false);\n//       setEditId(null);\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//       alert(\"Failed to submit education information.\");\n//     }\n//   };\n\n//   const handleEdit = (id) => {\n//     // Find the career information item based on the ID\n//     const itemToEdit = educationData.find((item) => item.id === id);\n\n//     if (itemToEdit) {\n//       setFormData({\n//         institute: itemToEdit?.institute,\n//         degree: itemToEdit?.degree,\n//         rollNumber: itemToEdit?.rollNumber,\n//         registrationNumber: itemToEdit?.registrationNumber,\n//         fieldOfStudy: itemToEdit?.fieldOfStudy,\n//         result: itemToEdit?.result,\n//         startYear: itemToEdit?.startYear,\n//         endYear: itemToEdit?.endYear,\n//       });\n//       setIsEditing(true); // Set editing state to true\n//       setEditId(id); // Set the ID of the item being edited\n//       setShowAlert(true); // Optionally show the alert for editing\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       // Call the API to delete the record\n//       await deleteEducationInformation(id);\n\n//       // Update the UI by removing the deleted item from the state\n//       setEducationData((prevData) => prevData.filter((item) => item.id !== id));\n\n//       alert(\"Record deleted successfully.\");\n//     } catch (error) {\n//       console.error(\"Error deleting record:\", error);\n//       alert(\"Failed to delete record.\");\n//     }\n//   };\n\n//   const handleAlertClose = () => {\n//     setShowAlert(false); // Close the alert\n//   };\n\n//   const handleAddNewClick = () => {\n//     setShowAlert(true); // Show the confirmation alert\n//   };\n\n//   const toggleSection = () => {\n//     setIsSectionOpen(!isSectionOpen);\n//   };\n//   return (\n//     <>\n//       <div className=\"collapsible-section\">\n//         <div\n//           className=\"section-header\"\n//           onClick={() => toggleSection(\"educationInformation\")}\n//         >\n//           <h5 className={`section-title ${isSectionOpen ? \"open\" : \"closed\"}`}>\n//             Education Information\n//           </h5>\n//           <span>\n//             {isSectionOpen ? (\n//               <i className=\"fa-solid fa-angle-up\"></i>\n//             ) : (\n//               <i className=\"fa-solid fa-angle-down\"></i>\n//             )}\n//           </span>\n//         </div>\n\n//         {isSectionOpen && (\n//           <div className=\"\">\n//             <button\n//               type=\"submit\"\n//               className=\"add-new-button\"\n//               onClick={handleAddNewClick}\n//             >\n//               <i\n//                 style={{ marginRight: \"5px\" }}\n//                 className=\"fa fa-plus\"\n//                 aria-hidden=\"true\"\n//               ></i>{\" \"}\n//               Add New\n//             </button>\n\n//             <table className=\"education-table\">\n//               <thead>\n//                 <tr>\n//                   <th>S.N</th>\n//                   <th>Degree</th>\n//                   <th>Institute</th>\n//                   <th>Field</th>\n//                   <th>Result</th>\n//                   <th>Start</th>\n//                   <th>End</th>\n//                   <th>Action</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {educationData\n//                   ?.filter((item) => item != null) // Ensure no undefined or null items\n//                   .map((item, index) => {\n//                     return (\n//                       <tr key={item.id}>\n//                         <td>{index + 1}</td>\n//                         <td>{item.degree || \"N/A\"}</td>\n//                         <td>{item.institute || \"N/A\"}</td>\n//                         <td>{item.fieldOfStudy || \"N/A\"}</td>\n//                         <td>{item.result || \"N/A\"}</td>\n//                         <td>{item.startYear || \"N/A\"}</td>\n//                         <td>{item.endYear || \"N/A\"}</td>\n//                         <td>\n//                           <button\n//                             className=\"action-button edit-button\"\n//                             onClick={() => handleEdit(item.id)}\n//                           >\n//                             ‚úèÔ∏è\n//                           </button>\n//                           <button\n//                             className=\"action-button delete-button\"\n//                             onClick={() => handleDelete(item.id)}\n//                           >\n//                             üóëÔ∏è\n//                           </button>\n//                         </td>\n//                       </tr>\n//                     );\n//                   })}\n//               </tbody>\n//             </table>\n//           </div>\n//         )}\n\n//         {/* Confirmation Alert */}\n//         {showAlert && (\n//           <div className=\"confirmation-alert\">\n//             <div className=\"education-information-dialog\">\n//               <div className=\"dialog-header\">\n//                 <h4>Add Education Information</h4>\n//                 <button className=\"cross-button\" onClick={handleAlertClose}>\n//                   <i className=\"bi bi-x cross-icon\"></i>\n//                 </button>\n//               </div>\n\n//               <form className=\"education-form\" onSubmit={handleSubmit}>\n//                 <h2>{isEditing ? \"Edit Education\" : \"Add Education\"}</h2>\n//                 <div className=\"section personal-details\">\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"text\"\n//                       name=\"institute\"\n//                       value={formData.institute}\n//                       placeholder=\"Institute *\"\n//                       onChange={handleChange}\n//                       required\n//                     />\n//                   </div>\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"text\"\n//                       name=\"degree\"\n//                       value={formData.degree}\n//                       placeholder=\"Degree *\"\n//                       onChange={handleChange}\n//                       required\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"section personal-details\">\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"text\"\n//                       name=\"rollNumber\"\n//                       value={formData.rollNumber}\n//                       placeholder=\"Roll Number *\"\n//                       onChange={handleChange}\n//                       required\n//                     />\n//                   </div>\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"number\"\n//                       name=\"registrationNumber\"\n//                       value={formData.registrationNumber}\n//                       placeholder=\"Registration Number\"\n//                       onChange={handleChange}\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"section personal-details\">\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"text\"\n//                       name=\"fieldOfStudy\"\n//                       value={formData.fieldOfStudy}\n//                       placeholder=\"Field Of Study *\"\n//                       onChange={handleChange}\n//                       required\n//                     />\n//                   </div>\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"number\"\n//                       name=\"result\"\n//                       value={formData.result}\n//                       placeholder=\"Result\"\n//                       onChange={handleChange}\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"section personal-details\">\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"date\"\n//                       name=\"startYear\"\n//                       placeholder=\"Starting Year\"\n//                       value={formData.startYear}\n//                       onChange={handleChange}\n//                       required\n//                     />\n//                   </div>\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"date\"\n//                       name=\"endYear\"\n//                       value={formData.endYear}\n//                       onChange={handleChange}\n//                     />\n//                   </div>\n//                 </div>\n//                 <button type=\"submit\" className=\"submit-button\">\n//                   {isEditing ? \"Update\" : \"Submit\"}\n//                 </button>\n//               </form>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default EducationInformation;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../../styles/user/dashboard.css\";\n// import \"../../styles/styles.css\";\n// import \"../../styles/user/profileSetting.css\";\n// import {\n//   educationInformationForm,\n//   fetchEducationData,\n//   deleteEducationInformation,\n// } from \"../../services/ApiService\";\n// import { toast, ToastContainer } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// const EducationInformation = () => {\n//   const [isSectionOpen, setIsSectionOpen] = useState(false);\n//   const [showAlert, setShowAlert] = useState(false);\n//   const [educationData, setEducationData] = useState([]);\n//   const [formData, setFormData] = useState({\n//     institute: \"\",\n//     degree: \"\",\n//     rollNumber: \"\",\n//     registrationNumber: \"\",\n//     fieldOfStudy: \"\",\n//     result: \"\",\n//     startYear: \"\",\n//     endYear: \"\",\n//   });\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [editId, setEditId] = useState(null); // To track editing ID\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       // Retrieve userId from localStorage\n//       const storedUserData = localStorage.getItem(\"userData\");\n//       const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\n\n//       if (!userId) {\n//         toast.error(\"User ID is missing. Please log in again.\");\n//         return;\n//       }\n\n//       try {\n//         console.log(\"Fetching education data for userId:\", userId); // Debugging log\n\n//         const response = await fetchEducationData(userId);\n//         if (response && response.data) {\n//           setEducationData(response.data); // Set the career data only if it's valid\n//         } else {\n//           toast.error(\"No data available or response is malformed.\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching education data:\", error);\n//         toast.error(\"Failed to fetch education data. Please try again later.\");\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Ensure user ID is available\n//     const storedUserData = localStorage.getItem(\"userData\");\n//     const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\n\n//     if (!userId) {\n//       toast.error(\"User ID is missing. Please log in again.\");\n//       return;\n//     }\n\n//     const dataToSubmit = { ...formData, userId };\n\n//     try {\n//       let response;\n\n//       if (isEditing) {\n//         // When editing, send the ID to the backend for updating the record\n//         response = await educationInformationForm(\n//           { ...dataToSubmit, id: editId },\n//           \"PUT\"\n//         );\n//         toast.success(\"Education Information updated successfully!\");\n//       } else {\n//         // When creating new, no ID is sent\n//         response = await educationInformationForm(dataToSubmit, \"POST\");\n//         toast.success(\"Education Information added successfully!\");\n//       }\n\n//       // Update local state based on whether we are editing or adding a new record\n//       const updatedData = isEditing\n//         ? educationData.map((item) =>\n//             item.id === editId ? response.data : item\n//           ) // Update the specific record\n//         : [...educationData, response.data]; // Add new data if not editing\n\n//       setEducationData(updatedData);\n\n//       // Reset the form and state\n//       setFormData({\n//         institute: \"\",\n//         degree: \"\",\n//         rollNumber: \"\",\n//         registrationNumber: \"\",\n//         fieldOfStudy: \"\",\n//         result: \"\",\n//         startYear: \"\",\n//         endYear: \"\",\n//       });\n//       setIsEditing(false);\n//       setEditId(null);\n//       setShowAlert(false);\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//       toast.error(\"Failed to submit education information.\");\n//     }\n//   };\n\n//   const handleEdit = (id) => {\n//     // Find the education information item based on the ID\n//     const itemToEdit = educationData.find((item) => item.id === id);\n\n//     if (itemToEdit) {\n//       setFormData({\n//         institute: itemToEdit?.institute,\n//         degree: itemToEdit?.degree,\n//         rollNumber: itemToEdit?.rollNumber,\n//         registrationNumber: itemToEdit?.registrationNumber,\n//         fieldOfStudy: itemToEdit?.fieldOfStudy,\n//         result: itemToEdit?.result,\n//         startYear: itemToEdit?.startYear,\n//         endYear: itemToEdit?.endYear,\n//       });\n//       setIsEditing(true); // Set editing state to true\n//       setEditId(id); // Set the ID of the item being edited\n//       setShowAlert(true); // Optionally show the alert for editing\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       // Call the API to delete the record\n//       await deleteEducationInformation(id);\n\n//       // Update the UI by removing the deleted item from the state\n//       setEducationData((prevData) => prevData.filter((item) => item.id !== id));\n\n//       toast.success(\"Record deleted successfully.\");\n//     } catch (error) {\n//       console.error(\"Error deleting record:\", error);\n//       toast.error(\"Failed to delete record.\");\n//     }\n//   };\n\n//   const handleAlertClose = () => {\n//     setShowAlert(false); // Close the alert\n//   };\n\n//   const handleAddNewClick = () => {\n//     setShowAlert(true); // Show the confirmation alert\n//   };\n\n//   const toggleSection = () => {\n//     setIsSectionOpen(!isSectionOpen);\n//   };\n\n//   return (\n//     <>\n//       <div className=\"collapsible-section\">\n//         <div\n//           className=\"section-header\"\n//           onClick={() => toggleSection(\"educationInformation\")}\n//         >\n//           <h5 className={`section-title ${isSectionOpen ? \"open\" : \"closed\"}`}>\n//             Education Information\n//           </h5>\n//           <span>\n//             {isSectionOpen ? (\n//               <i className=\"fa-solid fa-angle-up\"></i>\n//             ) : (\n//               <i className=\"fa-solid fa-angle-down\"></i>\n//             )}\n//           </span>\n//         </div>\n\n//         {isSectionOpen && (\n//           <div className=\"\">\n//             <button\n//               type=\"submit\"\n//               className=\"add-new-button\"\n//               onClick={handleAddNewClick}\n//             >\n//               <i\n//                 style={{ marginRight: \"5px\" }}\n//                 className=\"fa fa-plus\"\n//                 aria-hidden=\"true\"\n//               ></i>{\" \"}\n//               Add New\n//             </button>\n\n//             <table className=\"education-table\">\n//               <thead>\n//                 <tr>\n//                   <th>S.N</th>\n//                   <th>Degree</th>\n//                   <th>Institute</th>\n//                   <th>Field</th>\n//                   <th>Result</th>\n//                   <th>Start</th>\n//                   <th>End</th>\n//                   <th>Action</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {educationData\n//                   ?.filter((item) => item != null) // Ensure no undefined or null items\n//                   .map((item, index) => {\n//                     return (\n//                       <tr key={item.id}>\n//                         <td>{index + 1}</td>\n//                         <td>{item.degree || \"N/A\"}</td>\n//                         <td>{item.institute || \"N/A\"}</td>\n//                         <td>{item.fieldOfStudy || \"N/A\"}</td>\n//                         <td>{item.result || \"N/A\"}</td>\n//                         <td>{item.startYear || \"N/A\"}</td>\n//                         <td>{item.endYear || \"N/A\"}</td>\n//                         <td>\n//                           <button\n//                             className=\"action-button edit-button\"\n//                             onClick={() => handleEdit(item.id)}\n//                           >\n//                             ‚úèÔ∏è\n//                           </button>\n//                           <button\n//                             className=\"action-button delete-button\"\n//                             onClick={() => handleDelete(item.id)}\n//                           >\n//                             üóëÔ∏è\n//                           </button>\n//                         </td>\n//                       </tr>\n//                     );\n//                   })}\n//               </tbody>\n//             </table>\n//           </div>\n//         )}\n\n//         {/* Confirmation Alert */}\n//         {showAlert && (\n//           <div className=\"confirmation-alert\">\n//             <div className=\"education-information-dialog\">\n//               <div className=\"dialog-header\">\n//                 <h4>Add Education Information</h4>\n//                 <button className=\"cross-button\" onClick={handleAlertClose}>\n//                   <i className=\"bi bi-x cross-icon\"></i>\n//                 </button>\n//               </div>\n\n//               <form className=\"education-form\" onSubmit={handleSubmit}>\n//                 <h2>{isEditing ? \"Edit Education\" : \"Add Education\"}</h2>\n//                 <div className=\"section personal-details\">\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"text\"\n//                       name=\"institute\"\n//                       value={formData.institute}\n//                       placeholder=\"Institute *\"\n//                       onChange={handleChange}\n//                       required\n//                     />\n//                   </div>\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"text\"\n//                       name=\"degree\"\n//                       value={formData.degree}\n//                       placeholder=\"Degree *\"\n//                       onChange={handleChange}\n//                       required\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"section personal-details\">\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"text\"\n//                       name=\"rollNumber\"\n//                       value={formData.rollNumber}\n//                       placeholder=\"Roll Number *\"\n//                       onChange={handleChange}\n//                       required\n//                     />\n//                   </div>\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"number\"\n//                       name=\"registrationNumber\"\n//                       value={formData.registrationNumber}\n//                       placeholder=\"Registration Number\"\n//                       onChange={handleChange}\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"section personal-details\">\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"text\"\n//                       name=\"fieldOfStudy\"\n//                       value={formData.fieldOfStudy}\n//                       placeholder=\"Field Of Study *\"\n//                       onChange={handleChange}\n//                       required\n//                     />\n//                   </div>\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"number\"\n//                       name=\"result\"\n//                       value={formData.result}\n//                       placeholder=\"Result\"\n//                       onChange={handleChange}\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"section personal-details\">\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"date\"\n//                       name=\"startYear\"\n//                       placeholder=\"Starting Year\"\n//                       value={formData.startYear}\n//                       onChange={handleChange}\n//                       required\n//                     />\n//                   </div>\n//                   <div className=\"form-group\">\n//                     <input\n//                       type=\"date\"\n//                       name=\"endYear\"\n//                       value={formData.endYear}\n//                       onChange={handleChange}\n//                     />\n//                   </div>\n//                 </div>\n//                 <button type=\"submit\" className=\"submit-button\">\n//                   {isEditing ? \"Update\" : \"Submit\"}\n//                 </button>\n//               </form>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Toast Notifications */}\n//       <ToastContainer />\n//     </>\n//   );\n// };\n\n// export default EducationInformation;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../styles/user/dashboard.css\";\nimport \"../../styles/styles.css\";\nimport \"../../styles/user/profileSetting.css\";\nimport { educationInformationForm, fetchEducationData, deleteEducationInformation } from \"../../services/ApiService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EducationInformation = () => {\n  _s();\n  const [isSectionOpen, setIsSectionOpen] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [educationData, setEducationData] = useState([]); // Ensure it's always an array\n  const [formData, setFormData] = useState({\n    institute: \"\",\n    degree: \"\",\n    rollNumber: \"\",\n    registrationNumber: \"\",\n    fieldOfStudy: \"\",\n    result: \"\",\n    startYear: \"\",\n    endYear: \"\"\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [editId, setEditId] = useState(null); // Track editing ID\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      const storedUserData = localStorage.getItem(\"userData\");\n      const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\n      if (!userId) {\n        toast.error(\"User ID is missing. Please log in again.\");\n        return;\n      }\n      try {\n        var _response$data;\n        console.log(\"Fetching education data for userId:\", userId);\n        const response = await fetchEducationData(userId);\n        if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.length) > 0) {\n          console.log(\"Education data received:\", response.data);\n          setEducationData(response.data);\n\n          // Ensuring state updates correctly\n          setEducationData([...response.data]); // Spread operator to force re-render\n        } else {\n          console.log(\"No education data found for user.\");\n          setEducationData([]); // Prevent errors\n        }\n      } catch (error) {\n        console.error(\"Error fetching education data:\", error);\n        setEducationData([]); // Prevent crashing\n      }\n    };\n    fetchData();\n  }, [educationData]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const storedUserData = localStorage.getItem(\"userData\");\n    const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\n    if (!userId) {\n      toast.error(\"User ID is missing. Please log in again.\");\n      return;\n    }\n    const dataToSubmit = {\n      ...formData,\n      userId\n    };\n    try {\n      let response;\n      if (isEditing) {\n        response = await educationInformationForm({\n          ...dataToSubmit,\n          id: editId\n        }, \"PUT\");\n        toast.success(\"Education Information updated successfully!\");\n        setEducationData(prevData => prevData.map(item => item.id === editId ? response.data : item));\n      } else {\n        response = await educationInformationForm(dataToSubmit, \"POST\");\n        toast.success(\"Education Information added successfully!\");\n        setEducationData(prevData => [...prevData, response.data]); // üëà Add new entry to state immediately\n      }\n      setFormData({\n        institute: \"\",\n        degree: \"\",\n        rollNumber: \"\",\n        registrationNumber: \"\",\n        fieldOfStudy: \"\",\n        result: \"\",\n        startYear: \"\",\n        endYear: \"\"\n      });\n      setIsEditing(false);\n      setEditId(null);\n      setShowAlert(false);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      toast.error(\"Failed to submit education information.\");\n    }\n  };\n  const handleEdit = id => {\n    const itemToEdit = educationData.find(item => item.id === id);\n    if (itemToEdit) {\n      setFormData({\n        institute: itemToEdit === null || itemToEdit === void 0 ? void 0 : itemToEdit.institute,\n        degree: itemToEdit === null || itemToEdit === void 0 ? void 0 : itemToEdit.degree,\n        rollNumber: itemToEdit === null || itemToEdit === void 0 ? void 0 : itemToEdit.rollNumber,\n        registrationNumber: itemToEdit === null || itemToEdit === void 0 ? void 0 : itemToEdit.registrationNumber,\n        fieldOfStudy: itemToEdit === null || itemToEdit === void 0 ? void 0 : itemToEdit.fieldOfStudy,\n        result: itemToEdit === null || itemToEdit === void 0 ? void 0 : itemToEdit.result,\n        startYear: itemToEdit === null || itemToEdit === void 0 ? void 0 : itemToEdit.startYear,\n        endYear: itemToEdit === null || itemToEdit === void 0 ? void 0 : itemToEdit.endYear\n      });\n      setIsEditing(true);\n      setEditId(id);\n      setShowAlert(true);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteEducationInformation(id);\n      setEducationData(prevData => prevData.filter(item => item.id !== id));\n      toast.success(\"Record deleted successfully.\");\n    } catch (error) {\n      console.error(\"Error deleting record:\", error);\n      toast.error(\"Failed to delete record.\");\n    }\n  };\n  const handleAlertClose = () => {\n    setShowAlert(false);\n  };\n  const handleAddNewClick = () => {\n    setShowAlert(true);\n  };\n  const toggleSection = () => {\n    setIsSectionOpen(!isSectionOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        onClick: toggleSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: `section-title ${isSectionOpen ? \"open\" : \"closed\"}`,\n          children: \"Education Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isSectionOpen ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-angle-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-angle-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 9\n      }, this), isSectionOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-new-button\",\n          onClick: handleAddNewClick,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 15\n          }, this), \" Add New\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"education-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"S.N\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Degree\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Institute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: (Array.isArray(educationData) ? educationData : []).filter(item => item).map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.degree || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.institute || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.fieldOfStudy || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.result || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.startYear || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.endYear || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-button edit-button\",\n                  onClick: () => handleEdit(item.id),\n                  children: \"\\u270F\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 929,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-button delete-button\",\n                  onClick: () => handleDelete(item.id),\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 935,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 23\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 11\n      }, this), showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-alert\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"education-information-dialog\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dialog-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Add Education Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cross-button\",\n              onClick: handleAlertClose,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x cross-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"education-form\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: isEditing ? \"Edit Education\" : \"Add Education\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section personal-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"institute\",\n                  value: formData.institute,\n                  placeholder: \"Institute *\",\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 963,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"degree\",\n                  value: formData.degree,\n                  placeholder: \"Degree *\",\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section personal-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"rollNumber\",\n                  value: formData.rollNumber,\n                  placeholder: \"Roll Number *\",\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 985,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"registrationNumber\",\n                  value: formData.registrationNumber,\n                  placeholder: \"Registration Number\",\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section personal-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"fieldOfStudy\",\n                  value: formData.fieldOfStudy,\n                  placeholder: \"Field Of Study *\",\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1006,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"result\",\n                  value: formData.result,\n                  placeholder: \"Result\",\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1016,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1004,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section personal-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  name: \"startYear\",\n                  placeholder: \"Starting Year\",\n                  value: formData.startYear,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  name: \"endYear\",\n                  value: formData.endYear,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1037,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: isEditing ? \"Update\" : \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EducationInformation, \"qDvVDn0oD9xefOME1tpvWBP+luk=\", false, function () {\n  return [useNavigate];\n});\n_c = EducationInformation;\nexport default EducationInformation;\nvar _c;\n$RefreshReg$(_c, \"EducationInformation\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","educationInformationForm","fetchEducationData","deleteEducationInformation","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","EducationInformation","_s","isSectionOpen","setIsSectionOpen","showAlert","setShowAlert","educationData","setEducationData","formData","setFormData","institute","degree","rollNumber","registrationNumber","fieldOfStudy","result","startYear","endYear","isEditing","setIsEditing","editId","setEditId","navigate","fetchData","storedUserData","localStorage","getItem","userId","JSON","parse","user","id","error","_response$data","console","log","response","data","length","handleChange","e","target","name","value","handleSubmit","preventDefault","dataToSubmit","success","prevData","map","item","handleEdit","itemToEdit","find","handleDelete","filter","handleAlertClose","handleAddNewClick","toggleSection","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","index","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["E:/MatriLab-frontend/src/screens/user/EducationInformation.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"../../styles/user/dashboard.css\";\r\n// import \"../../styles/styles.css\";\r\n// import \"../../styles/user/profileSetting.css\";\r\n// import {\r\n//   educationInformationForm,\r\n//   fetchEducationData,\r\n//   deleteEducationInformation,\r\n// } from \"../../services/ApiService\";\r\n\r\n// const EducationInformation = () => {\r\n//   const [isSectionOpen, setIsSectionOpen] = useState(false);\r\n//   const [showAlert, setShowAlert] = useState(false);\r\n//   const [educationData, setEducationData] = useState([]);\r\n//   const [formData, setFormData] = useState({\r\n//     institute: \"\",\r\n//     degree: \"\",\r\n//     rollNumber: \"\",\r\n//     registrationNumber: \"\",\r\n//     fieldOfStudy: \"\",\r\n//     result: \"\",\r\n//     startYear: \"\",\r\n//     endYear: \"\",\r\n//   });\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [editId, setEditId] = useState(null); // To track editing ID\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await fetchEducationData();\r\n//         if (response && response.data) {\r\n//           setEducationData(response.data); // Set the career data only if it's valid\r\n//         } else {\r\n//           alert(\"No data available or response is malformed.\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching education data:\", error);\r\n//         alert(\"Failed to fetch education data. Please try again later.\");\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Ensure user ID is available\r\n//     const storedUserData = localStorage.getItem(\"userData\");\r\n//     const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\r\n\r\n//     if (!userId) {\r\n//       alert(\"User ID is missing. Please log in again.\");\r\n//       return;\r\n//     }\r\n\r\n//     const dataToSubmit = { ...formData, userId };\r\n\r\n//     try {\r\n//       let response;\r\n\r\n//       if (isEditing) {\r\n//         // When editing, send the ID to the backend for updating the record\r\n//         response = await educationInformationForm(\r\n//           { ...dataToSubmit, id: editId },\r\n//           \"PUT\"\r\n//         );\r\n//       } else {\r\n//         // When creating new, no ID is sent\r\n//         response = await educationInformationForm(dataToSubmit, \"POST\");\r\n//       }\r\n\r\n//       alert(\"Education Information submitted successfully!\");\r\n//       setShowAlert(false);\r\n\r\n//       // Update local state based on whether we are editing or adding a new record\r\n//       const updatedData = isEditing\r\n//         ? educationData.map((item) =>\r\n//             item.id === editId ? response.data : item\r\n//           ) // Update the specific record\r\n//         : [...educationData, response.data]; // Add new data if not editing\r\n\r\n//       setEducationData(updatedData);\r\n\r\n//       // Reset the form\r\n//       setFormData({\r\n//         institute: \"\",\r\n//         degree: \"\",\r\n//         rollNumber: \"\",\r\n//         registrationNumber: \"\",\r\n//         fieldOfStudy: \"\",\r\n//         result: \"\",\r\n//         startYear: \"\",\r\n//         endYear: \"\",\r\n//       });\r\n//       setIsEditing(false);\r\n//       setEditId(null);\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting form:\", error);\r\n//       alert(\"Failed to submit education information.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (id) => {\r\n//     // Find the career information item based on the ID\r\n//     const itemToEdit = educationData.find((item) => item.id === id);\r\n\r\n//     if (itemToEdit) {\r\n//       setFormData({\r\n//         institute: itemToEdit?.institute,\r\n//         degree: itemToEdit?.degree,\r\n//         rollNumber: itemToEdit?.rollNumber,\r\n//         registrationNumber: itemToEdit?.registrationNumber,\r\n//         fieldOfStudy: itemToEdit?.fieldOfStudy,\r\n//         result: itemToEdit?.result,\r\n//         startYear: itemToEdit?.startYear,\r\n//         endYear: itemToEdit?.endYear,\r\n//       });\r\n//       setIsEditing(true); // Set editing state to true\r\n//       setEditId(id); // Set the ID of the item being edited\r\n//       setShowAlert(true); // Optionally show the alert for editing\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       // Call the API to delete the record\r\n//       await deleteEducationInformation(id);\r\n\r\n//       // Update the UI by removing the deleted item from the state\r\n//       setEducationData((prevData) => prevData.filter((item) => item.id !== id));\r\n\r\n//       alert(\"Record deleted successfully.\");\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting record:\", error);\r\n//       alert(\"Failed to delete record.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleAlertClose = () => {\r\n//     setShowAlert(false); // Close the alert\r\n//   };\r\n\r\n//   const handleAddNewClick = () => {\r\n//     setShowAlert(true); // Show the confirmation alert\r\n//   };\r\n\r\n//   const toggleSection = () => {\r\n//     setIsSectionOpen(!isSectionOpen);\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <div className=\"collapsible-section\">\r\n//         <div\r\n//           className=\"section-header\"\r\n//           onClick={() => toggleSection(\"educationInformation\")}\r\n//         >\r\n//           <h5 className={`section-title ${isSectionOpen ? \"open\" : \"closed\"}`}>\r\n//             Education Information\r\n//           </h5>\r\n//           <span>\r\n//             {isSectionOpen ? (\r\n//               <i className=\"fa-solid fa-angle-up\"></i>\r\n//             ) : (\r\n//               <i className=\"fa-solid fa-angle-down\"></i>\r\n//             )}\r\n//           </span>\r\n//         </div>\r\n\r\n//         {isSectionOpen && (\r\n//           <div className=\"\">\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"add-new-button\"\r\n//               onClick={handleAddNewClick}\r\n//             >\r\n//               <i\r\n//                 style={{ marginRight: \"5px\" }}\r\n//                 className=\"fa fa-plus\"\r\n//                 aria-hidden=\"true\"\r\n//               ></i>{\" \"}\r\n//               Add New\r\n//             </button>\r\n\r\n//             <table className=\"education-table\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>S.N</th>\r\n//                   <th>Degree</th>\r\n//                   <th>Institute</th>\r\n//                   <th>Field</th>\r\n//                   <th>Result</th>\r\n//                   <th>Start</th>\r\n//                   <th>End</th>\r\n//                   <th>Action</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {educationData\r\n//                   ?.filter((item) => item != null) // Ensure no undefined or null items\r\n//                   .map((item, index) => {\r\n//                     return (\r\n//                       <tr key={item.id}>\r\n//                         <td>{index + 1}</td>\r\n//                         <td>{item.degree || \"N/A\"}</td>\r\n//                         <td>{item.institute || \"N/A\"}</td>\r\n//                         <td>{item.fieldOfStudy || \"N/A\"}</td>\r\n//                         <td>{item.result || \"N/A\"}</td>\r\n//                         <td>{item.startYear || \"N/A\"}</td>\r\n//                         <td>{item.endYear || \"N/A\"}</td>\r\n//                         <td>\r\n//                           <button\r\n//                             className=\"action-button edit-button\"\r\n//                             onClick={() => handleEdit(item.id)}\r\n//                           >\r\n//                             ‚úèÔ∏è\r\n//                           </button>\r\n//                           <button\r\n//                             className=\"action-button delete-button\"\r\n//                             onClick={() => handleDelete(item.id)}\r\n//                           >\r\n//                             üóëÔ∏è\r\n//                           </button>\r\n//                         </td>\r\n//                       </tr>\r\n//                     );\r\n//                   })}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Confirmation Alert */}\r\n//         {showAlert && (\r\n//           <div className=\"confirmation-alert\">\r\n//             <div className=\"education-information-dialog\">\r\n//               <div className=\"dialog-header\">\r\n//                 <h4>Add Education Information</h4>\r\n//                 <button className=\"cross-button\" onClick={handleAlertClose}>\r\n//                   <i className=\"bi bi-x cross-icon\"></i>\r\n//                 </button>\r\n//               </div>\r\n\r\n//               <form className=\"education-form\" onSubmit={handleSubmit}>\r\n//                 <h2>{isEditing ? \"Edit Education\" : \"Add Education\"}</h2>\r\n//                 <div className=\"section personal-details\">\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name=\"institute\"\r\n//                       value={formData.institute}\r\n//                       placeholder=\"Institute *\"\r\n//                       onChange={handleChange}\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name=\"degree\"\r\n//                       value={formData.degree}\r\n//                       placeholder=\"Degree *\"\r\n//                       onChange={handleChange}\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"section personal-details\">\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name=\"rollNumber\"\r\n//                       value={formData.rollNumber}\r\n//                       placeholder=\"Roll Number *\"\r\n//                       onChange={handleChange}\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       name=\"registrationNumber\"\r\n//                       value={formData.registrationNumber}\r\n//                       placeholder=\"Registration Number\"\r\n//                       onChange={handleChange}\r\n//                     />\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"section personal-details\">\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name=\"fieldOfStudy\"\r\n//                       value={formData.fieldOfStudy}\r\n//                       placeholder=\"Field Of Study *\"\r\n//                       onChange={handleChange}\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       name=\"result\"\r\n//                       value={formData.result}\r\n//                       placeholder=\"Result\"\r\n//                       onChange={handleChange}\r\n//                     />\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"section personal-details\">\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"date\"\r\n//                       name=\"startYear\"\r\n//                       placeholder=\"Starting Year\"\r\n//                       value={formData.startYear}\r\n//                       onChange={handleChange}\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"date\"\r\n//                       name=\"endYear\"\r\n//                       value={formData.endYear}\r\n//                       onChange={handleChange}\r\n//                     />\r\n//                   </div>\r\n//                 </div>\r\n//                 <button type=\"submit\" className=\"submit-button\">\r\n//                   {isEditing ? \"Update\" : \"Submit\"}\r\n//                 </button>\r\n//               </form>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default EducationInformation;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"../../styles/user/dashboard.css\";\r\n// import \"../../styles/styles.css\";\r\n// import \"../../styles/user/profileSetting.css\";\r\n// import {\r\n//   educationInformationForm,\r\n//   fetchEducationData,\r\n//   deleteEducationInformation,\r\n// } from \"../../services/ApiService\";\r\n// import { toast, ToastContainer } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// const EducationInformation = () => {\r\n//   const [isSectionOpen, setIsSectionOpen] = useState(false);\r\n//   const [showAlert, setShowAlert] = useState(false);\r\n//   const [educationData, setEducationData] = useState([]);\r\n//   const [formData, setFormData] = useState({\r\n//     institute: \"\",\r\n//     degree: \"\",\r\n//     rollNumber: \"\",\r\n//     registrationNumber: \"\",\r\n//     fieldOfStudy: \"\",\r\n//     result: \"\",\r\n//     startYear: \"\",\r\n//     endYear: \"\",\r\n//   });\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [editId, setEditId] = useState(null); // To track editing ID\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       // Retrieve userId from localStorage\r\n//       const storedUserData = localStorage.getItem(\"userData\");\r\n//       const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\r\n\r\n//       if (!userId) {\r\n//         toast.error(\"User ID is missing. Please log in again.\");\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         console.log(\"Fetching education data for userId:\", userId); // Debugging log\r\n\r\n//         const response = await fetchEducationData(userId);\r\n//         if (response && response.data) {\r\n//           setEducationData(response.data); // Set the career data only if it's valid\r\n//         } else {\r\n//           toast.error(\"No data available or response is malformed.\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching education data:\", error);\r\n//         toast.error(\"Failed to fetch education data. Please try again later.\");\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Ensure user ID is available\r\n//     const storedUserData = localStorage.getItem(\"userData\");\r\n//     const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\r\n\r\n//     if (!userId) {\r\n//       toast.error(\"User ID is missing. Please log in again.\");\r\n//       return;\r\n//     }\r\n\r\n//     const dataToSubmit = { ...formData, userId };\r\n\r\n//     try {\r\n//       let response;\r\n\r\n//       if (isEditing) {\r\n//         // When editing, send the ID to the backend for updating the record\r\n//         response = await educationInformationForm(\r\n//           { ...dataToSubmit, id: editId },\r\n//           \"PUT\"\r\n//         );\r\n//         toast.success(\"Education Information updated successfully!\");\r\n//       } else {\r\n//         // When creating new, no ID is sent\r\n//         response = await educationInformationForm(dataToSubmit, \"POST\");\r\n//         toast.success(\"Education Information added successfully!\");\r\n//       }\r\n\r\n//       // Update local state based on whether we are editing or adding a new record\r\n//       const updatedData = isEditing\r\n//         ? educationData.map((item) =>\r\n//             item.id === editId ? response.data : item\r\n//           ) // Update the specific record\r\n//         : [...educationData, response.data]; // Add new data if not editing\r\n\r\n//       setEducationData(updatedData);\r\n\r\n//       // Reset the form and state\r\n//       setFormData({\r\n//         institute: \"\",\r\n//         degree: \"\",\r\n//         rollNumber: \"\",\r\n//         registrationNumber: \"\",\r\n//         fieldOfStudy: \"\",\r\n//         result: \"\",\r\n//         startYear: \"\",\r\n//         endYear: \"\",\r\n//       });\r\n//       setIsEditing(false);\r\n//       setEditId(null);\r\n//       setShowAlert(false);\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting form:\", error);\r\n//       toast.error(\"Failed to submit education information.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (id) => {\r\n//     // Find the education information item based on the ID\r\n//     const itemToEdit = educationData.find((item) => item.id === id);\r\n\r\n//     if (itemToEdit) {\r\n//       setFormData({\r\n//         institute: itemToEdit?.institute,\r\n//         degree: itemToEdit?.degree,\r\n//         rollNumber: itemToEdit?.rollNumber,\r\n//         registrationNumber: itemToEdit?.registrationNumber,\r\n//         fieldOfStudy: itemToEdit?.fieldOfStudy,\r\n//         result: itemToEdit?.result,\r\n//         startYear: itemToEdit?.startYear,\r\n//         endYear: itemToEdit?.endYear,\r\n//       });\r\n//       setIsEditing(true); // Set editing state to true\r\n//       setEditId(id); // Set the ID of the item being edited\r\n//       setShowAlert(true); // Optionally show the alert for editing\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       // Call the API to delete the record\r\n//       await deleteEducationInformation(id);\r\n\r\n//       // Update the UI by removing the deleted item from the state\r\n//       setEducationData((prevData) => prevData.filter((item) => item.id !== id));\r\n\r\n//       toast.success(\"Record deleted successfully.\");\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting record:\", error);\r\n//       toast.error(\"Failed to delete record.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleAlertClose = () => {\r\n//     setShowAlert(false); // Close the alert\r\n//   };\r\n\r\n//   const handleAddNewClick = () => {\r\n//     setShowAlert(true); // Show the confirmation alert\r\n//   };\r\n\r\n//   const toggleSection = () => {\r\n//     setIsSectionOpen(!isSectionOpen);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"collapsible-section\">\r\n//         <div\r\n//           className=\"section-header\"\r\n//           onClick={() => toggleSection(\"educationInformation\")}\r\n//         >\r\n//           <h5 className={`section-title ${isSectionOpen ? \"open\" : \"closed\"}`}>\r\n//             Education Information\r\n//           </h5>\r\n//           <span>\r\n//             {isSectionOpen ? (\r\n//               <i className=\"fa-solid fa-angle-up\"></i>\r\n//             ) : (\r\n//               <i className=\"fa-solid fa-angle-down\"></i>\r\n//             )}\r\n//           </span>\r\n//         </div>\r\n\r\n//         {isSectionOpen && (\r\n//           <div className=\"\">\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"add-new-button\"\r\n//               onClick={handleAddNewClick}\r\n//             >\r\n//               <i\r\n//                 style={{ marginRight: \"5px\" }}\r\n//                 className=\"fa fa-plus\"\r\n//                 aria-hidden=\"true\"\r\n//               ></i>{\" \"}\r\n//               Add New\r\n//             </button>\r\n\r\n//             <table className=\"education-table\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>S.N</th>\r\n//                   <th>Degree</th>\r\n//                   <th>Institute</th>\r\n//                   <th>Field</th>\r\n//                   <th>Result</th>\r\n//                   <th>Start</th>\r\n//                   <th>End</th>\r\n//                   <th>Action</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {educationData\r\n//                   ?.filter((item) => item != null) // Ensure no undefined or null items\r\n//                   .map((item, index) => {\r\n//                     return (\r\n//                       <tr key={item.id}>\r\n//                         <td>{index + 1}</td>\r\n//                         <td>{item.degree || \"N/A\"}</td>\r\n//                         <td>{item.institute || \"N/A\"}</td>\r\n//                         <td>{item.fieldOfStudy || \"N/A\"}</td>\r\n//                         <td>{item.result || \"N/A\"}</td>\r\n//                         <td>{item.startYear || \"N/A\"}</td>\r\n//                         <td>{item.endYear || \"N/A\"}</td>\r\n//                         <td>\r\n//                           <button\r\n//                             className=\"action-button edit-button\"\r\n//                             onClick={() => handleEdit(item.id)}\r\n//                           >\r\n//                             ‚úèÔ∏è\r\n//                           </button>\r\n//                           <button\r\n//                             className=\"action-button delete-button\"\r\n//                             onClick={() => handleDelete(item.id)}\r\n//                           >\r\n//                             üóëÔ∏è\r\n//                           </button>\r\n//                         </td>\r\n//                       </tr>\r\n//                     );\r\n//                   })}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Confirmation Alert */}\r\n//         {showAlert && (\r\n//           <div className=\"confirmation-alert\">\r\n//             <div className=\"education-information-dialog\">\r\n//               <div className=\"dialog-header\">\r\n//                 <h4>Add Education Information</h4>\r\n//                 <button className=\"cross-button\" onClick={handleAlertClose}>\r\n//                   <i className=\"bi bi-x cross-icon\"></i>\r\n//                 </button>\r\n//               </div>\r\n\r\n//               <form className=\"education-form\" onSubmit={handleSubmit}>\r\n//                 <h2>{isEditing ? \"Edit Education\" : \"Add Education\"}</h2>\r\n//                 <div className=\"section personal-details\">\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name=\"institute\"\r\n//                       value={formData.institute}\r\n//                       placeholder=\"Institute *\"\r\n//                       onChange={handleChange}\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name=\"degree\"\r\n//                       value={formData.degree}\r\n//                       placeholder=\"Degree *\"\r\n//                       onChange={handleChange}\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"section personal-details\">\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name=\"rollNumber\"\r\n//                       value={formData.rollNumber}\r\n//                       placeholder=\"Roll Number *\"\r\n//                       onChange={handleChange}\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       name=\"registrationNumber\"\r\n//                       value={formData.registrationNumber}\r\n//                       placeholder=\"Registration Number\"\r\n//                       onChange={handleChange}\r\n//                     />\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"section personal-details\">\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name=\"fieldOfStudy\"\r\n//                       value={formData.fieldOfStudy}\r\n//                       placeholder=\"Field Of Study *\"\r\n//                       onChange={handleChange}\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       name=\"result\"\r\n//                       value={formData.result}\r\n//                       placeholder=\"Result\"\r\n//                       onChange={handleChange}\r\n//                     />\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"section personal-details\">\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"date\"\r\n//                       name=\"startYear\"\r\n//                       placeholder=\"Starting Year\"\r\n//                       value={formData.startYear}\r\n//                       onChange={handleChange}\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"form-group\">\r\n//                     <input\r\n//                       type=\"date\"\r\n//                       name=\"endYear\"\r\n//                       value={formData.endYear}\r\n//                       onChange={handleChange}\r\n//                     />\r\n//                   </div>\r\n//                 </div>\r\n//                 <button type=\"submit\" className=\"submit-button\">\r\n//                   {isEditing ? \"Update\" : \"Submit\"}\r\n//                 </button>\r\n//               </form>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Toast Notifications */}\r\n//       <ToastContainer />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default EducationInformation;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/user/dashboard.css\";\r\nimport \"../../styles/styles.css\";\r\nimport \"../../styles/user/profileSetting.css\";\r\nimport {\r\n  educationInformationForm,\r\n  fetchEducationData,\r\n  deleteEducationInformation,\r\n} from \"../../services/ApiService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst EducationInformation = () => {\r\n  const [isSectionOpen, setIsSectionOpen] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [educationData, setEducationData] = useState([]); // Ensure it's always an array\r\n  const [formData, setFormData] = useState({\r\n    institute: \"\",\r\n    degree: \"\",\r\n    rollNumber: \"\",\r\n    registrationNumber: \"\",\r\n    fieldOfStudy: \"\",\r\n    result: \"\",\r\n    startYear: \"\",\r\n    endYear: \"\",\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editId, setEditId] = useState(null); // Track editing ID\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const storedUserData = localStorage.getItem(\"userData\");\r\n      const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\r\n\r\n      if (!userId) {\r\n        toast.error(\"User ID is missing. Please log in again.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log(\"Fetching education data for userId:\", userId);\r\n\r\n        const response = await fetchEducationData(userId);\r\n        if (response?.data?.length > 0) {\r\n          console.log(\"Education data received:\", response.data);\r\n          setEducationData(response.data);\r\n        \r\n          // Ensuring state updates correctly\r\n        setEducationData([...response.data]); // Spread operator to force re-render\r\n        \r\n      } else {\r\n          console.log(\"No education data found for user.\");\r\n          setEducationData([]); // Prevent errors\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching education data:\", error);\r\n        setEducationData([]); // Prevent crashing\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [educationData]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const storedUserData = localStorage.getItem(\"userData\");\r\n    const userId = storedUserData ? JSON.parse(storedUserData).user.id : null;\r\n\r\n    if (!userId) {\r\n      toast.error(\"User ID is missing. Please log in again.\");\r\n      return;\r\n    }\r\n\r\n    const dataToSubmit = { ...formData, userId };\r\n\r\n    try {\r\n      let response;\r\n\r\n      if (isEditing) {\r\n        response = await educationInformationForm(\r\n          { ...dataToSubmit, id: editId },\r\n          \"PUT\"\r\n        );\r\n        toast.success(\"Education Information updated successfully!\");\r\n        \r\n        setEducationData((prevData) =>\r\n          prevData.map((item) => (item.id === editId ? response.data : item))\r\n        );\r\n      } else {\r\n        response = await educationInformationForm(dataToSubmit, \"POST\");\r\n        toast.success(\"Education Information added successfully!\");\r\n        setEducationData((prevData) => [...prevData, response.data]); // üëà Add new entry to state immediately\r\n      }\r\n\r\n      setFormData({\r\n        institute: \"\",\r\n        degree: \"\",\r\n        rollNumber: \"\",\r\n        registrationNumber: \"\",\r\n        fieldOfStudy: \"\",\r\n        result: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n      });\r\n      setIsEditing(false);\r\n      setEditId(null);\r\n      setShowAlert(false);\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n      toast.error(\"Failed to submit education information.\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const itemToEdit = educationData.find((item) => item.id === id);\r\n\r\n    if (itemToEdit) {\r\n      setFormData({\r\n        institute: itemToEdit?.institute,\r\n        degree: itemToEdit?.degree,\r\n        rollNumber: itemToEdit?.rollNumber,\r\n        registrationNumber: itemToEdit?.registrationNumber,\r\n        fieldOfStudy: itemToEdit?.fieldOfStudy,\r\n        result: itemToEdit?.result,\r\n        startYear: itemToEdit?.startYear,\r\n        endYear: itemToEdit?.endYear,\r\n      });\r\n      setIsEditing(true);\r\n      setEditId(id);\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteEducationInformation(id);\r\n      setEducationData((prevData) => prevData.filter((item) => item.id !== id));\r\n      toast.success(\"Record deleted successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting record:\", error);\r\n      toast.error(\"Failed to delete record.\");\r\n    }\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setShowAlert(false);\r\n  };\r\n\r\n  const handleAddNewClick = () => {\r\n    setShowAlert(true);\r\n  };\r\n\r\n  const toggleSection = () => {\r\n    setIsSectionOpen(!isSectionOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"collapsible-section\">\r\n        <div className=\"section-header\" onClick={toggleSection}>\r\n          <h5 className={`section-title ${isSectionOpen ? \"open\" : \"closed\"}`}>\r\n            Education Information\r\n          </h5>\r\n          <span>\r\n            {isSectionOpen ? (\r\n              <i className=\"fa-solid fa-angle-up\"></i>\r\n            ) : (\r\n              <i className=\"fa-solid fa-angle-down\"></i>\r\n            )}\r\n          </span>\r\n        </div>\r\n\r\n        {isSectionOpen && (\r\n          <div className=\"\">\r\n            <button className=\"add-new-button\" onClick={handleAddNewClick}>\r\n              <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add New\r\n            </button>\r\n\r\n            <table className=\"education-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>S.N</th>\r\n                  <th>Degree</th>\r\n                  <th>Institute</th>\r\n                  <th>Field</th>\r\n                  <th>Result</th>\r\n                  <th>Start</th>\r\n                  <th>End</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(Array.isArray(educationData) ? educationData : [])\r\n                  .filter((item) => item)\r\n                  .map((item, index) => (\r\n                    <tr key={item.id}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{item.degree || \"N/A\"}</td>\r\n                      <td>{item.institute || \"N/A\"}</td>\r\n                      <td>{item.fieldOfStudy || \"N/A\"}</td>\r\n                      <td>{item.result || \"N/A\"}</td>\r\n                      <td>{item.startYear || \"N/A\"}</td>\r\n                      <td>{item.endYear || \"N/A\"}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"action-button edit-button\"\r\n                          onClick={() => handleEdit(item.id)}\r\n                        >\r\n                          ‚úèÔ∏è\r\n                        </button>\r\n                        <button\r\n                          className=\"action-button delete-button\"\r\n                          onClick={() => handleDelete(item.id)}\r\n                        >\r\n                          üóëÔ∏è\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n        {/* Confirmation Alert */}\r\n        {showAlert && (\r\n          <div className=\"confirmation-alert\">\r\n            <div className=\"education-information-dialog\">\r\n              <div className=\"dialog-header\">\r\n                <h4>Add Education Information</h4>\r\n                <button className=\"cross-button\" onClick={handleAlertClose}>\r\n                  <i className=\"bi bi-x cross-icon\"></i>\r\n                </button>\r\n              </div>\r\n\r\n              <form className=\"education-form\" onSubmit={handleSubmit}>\r\n                <h2>{isEditing ? \"Edit Education\" : \"Add Education\"}</h2>\r\n                <div className=\"section personal-details\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"institute\"\r\n                      value={formData.institute}\r\n                      placeholder=\"Institute *\"\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"degree\"\r\n                      value={formData.degree}\r\n                      placeholder=\"Degree *\"\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"section personal-details\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"rollNumber\"\r\n                      value={formData.rollNumber}\r\n                      placeholder=\"Roll Number *\"\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"registrationNumber\"\r\n                      value={formData.registrationNumber}\r\n                      placeholder=\"Registration Number\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"section personal-details\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"fieldOfStudy\"\r\n                      value={formData.fieldOfStudy}\r\n                      placeholder=\"Field Of Study *\"\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"result\"\r\n                      value={formData.result}\r\n                      placeholder=\"Result\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"section personal-details\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"startYear\"\r\n                      placeholder=\"Starting Year\"\r\n                      value={formData.startYear}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"endYear\"\r\n                      value={formData.endYear}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-button\">\r\n                  {isEditing ? \"Update\" : \"Submit\"}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EducationInformation;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iCAAiC;AACxC,OAAO,yBAAyB;AAChC,OAAO,sCAAsC;AAC7C,SACEC,wBAAwB,EACxBC,kBAAkB,EAClBC,0BAA0B,QACrB,2BAA2B;AAClC,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}